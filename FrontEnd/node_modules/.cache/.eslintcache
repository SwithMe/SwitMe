[{"D:\\SwitMe\\FrontEnd\\src\\index.js":"1","D:\\SwitMe\\FrontEnd\\src\\App.js":"2","D:\\SwitMe\\FrontEnd\\src\\_reducer\\index.js":"3","D:\\SwitMe\\FrontEnd\\src\\pages\\StudyDetail.js":"4","D:\\SwitMe\\FrontEnd\\src\\pages\\Signup.js":"5","D:\\SwitMe\\FrontEnd\\src\\pages\\FindEmail.js":"6","D:\\SwitMe\\FrontEnd\\src\\pages\\Login.js":"7","D:\\SwitMe\\FrontEnd\\src\\pages\\StopWatch.js":"8","D:\\SwitMe\\FrontEnd\\src\\pages\\MainPage.js":"9","D:\\SwitMe\\FrontEnd\\src\\pages\\MemberList.js":"10","D:\\SwitMe\\FrontEnd\\src\\pages\\MakeStudy.js":"11","D:\\SwitMe\\FrontEnd\\src\\pages\\Mypage.js":"12","D:\\SwitMe\\FrontEnd\\src\\pages\\StudyList.js":"13","D:\\SwitMe\\FrontEnd\\src\\components\\Modal.js":"14","D:\\SwitMe\\FrontEnd\\src\\pages\\FindPassword.js":"15","D:\\SwitMe\\FrontEnd\\src\\_actions\\actions.js":"16","D:\\SwitMe\\FrontEnd\\src\\components\\Image.js":"17","D:\\SwitMe\\FrontEnd\\src\\components\\Header.js":"18","D:\\SwitMe\\FrontEnd\\src\\components\\Input2.js":"19","D:\\SwitMe\\FrontEnd\\src\\components\\Title.js":"20","D:\\SwitMe\\FrontEnd\\src\\components\\Button.js":"21","D:\\SwitMe\\FrontEnd\\src\\components\\Watch.js":"22","D:\\SwitMe\\FrontEnd\\src\\components\\TimerList.js":"23","D:\\SwitMe\\FrontEnd\\src\\components\\Input.js":"24","D:\\SwitMe\\FrontEnd\\src\\components\\TimerListContent.js":"25","D:\\SwitMe\\FrontEnd\\src\\components\\ModalTimer.js":"26","D:\\SwitMe\\FrontEnd\\src\\config.js":"27","D:\\SwitMe\\FrontEnd\\src\\components\\Chat_list.js":"28","D:\\SwitMe\\FrontEnd\\src\\components\\Chat.js":"29","D:\\SwitMe\\FrontEnd\\src\\pages\\EditStudy.js":"30","D:\\SwitMe\\FrontEnd\\src\\pages\\EditUser.js":"31","D:\\SwitMe\\FrontEnd\\src\\components\\ImageUpload.js":"32","D:\\SwitMe\\FrontEnd\\src\\components\\Warn.js":"33"},{"size":699,"mtime":1627578694958,"results":"34","hashOfConfig":"35"},{"size":1740,"mtime":1627780059918,"results":"36","hashOfConfig":"35"},{"size":170,"mtime":1627128191964,"results":"37","hashOfConfig":"35"},{"size":12863,"mtime":1627788545132,"results":"38","hashOfConfig":"35"},{"size":4039,"mtime":1627780059959,"results":"39","hashOfConfig":"35"},{"size":1341,"mtime":1627630235025,"results":"40","hashOfConfig":"35"},{"size":2990,"mtime":1627789164189,"results":"41","hashOfConfig":"35"},{"size":1151,"mtime":1627783354632,"results":"42","hashOfConfig":"35"},{"size":13012,"mtime":1627780359320,"results":"43","hashOfConfig":"35"},{"size":6425,"mtime":1627789188479,"results":"44","hashOfConfig":"35"},{"size":26352,"mtime":1627789562738,"results":"45","hashOfConfig":"35"},{"size":13050,"mtime":1627788774238,"results":"46","hashOfConfig":"35"},{"size":11832,"mtime":1627787791874,"results":"47","hashOfConfig":"35"},{"size":1337,"mtime":1627220345177,"results":"48","hashOfConfig":"35"},{"size":2580,"mtime":1627789164187,"results":"49","hashOfConfig":"35"},{"size":10027,"mtime":1627789164232,"results":"50","hashOfConfig":"35"},{"size":830,"mtime":1626167541983,"results":"51","hashOfConfig":"35"},{"size":5667,"mtime":1627783354613,"results":"52","hashOfConfig":"35"},{"size":499,"mtime":1627128191985,"results":"53","hashOfConfig":"35"},{"size":1184,"mtime":1627658800216,"results":"54","hashOfConfig":"35"},{"size":667,"mtime":1627128191976,"results":"55","hashOfConfig":"35"},{"size":5665,"mtime":1627783354619,"results":"56","hashOfConfig":"35"},{"size":5221,"mtime":1627783354617,"results":"57","hashOfConfig":"35"},{"size":1426,"mtime":1627630235021,"results":"58","hashOfConfig":"35"},{"size":3103,"mtime":1627780059933,"results":"59","hashOfConfig":"35"},{"size":2210,"mtime":1627783354616,"results":"60","hashOfConfig":"35"},{"size":110,"mtime":1627792753859,"results":"61","hashOfConfig":"35"},{"size":4333,"mtime":1627780594570,"results":"62","hashOfConfig":"35"},{"size":7742,"mtime":1627784156914,"results":"63","hashOfConfig":"35"},{"size":27835,"mtime":1627790799492,"results":"64","hashOfConfig":"35"},{"size":4325,"mtime":1627783354622,"results":"65","hashOfConfig":"35"},{"size":1476,"mtime":1627780059925,"results":"66","hashOfConfig":"35"},{"size":5590,"mtime":1627789164183,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cmo5z8",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},"D:\\SwitMe\\FrontEnd\\src\\index.js",[],"D:\\SwitMe\\FrontEnd\\src\\App.js",[],"D:\\SwitMe\\FrontEnd\\src\\_reducer\\index.js",[],"D:\\SwitMe\\FrontEnd\\src\\pages\\StudyDetail.js",["155"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../components/Header\";\r\nimport Image from \"../components/Image\";\r\nimport Title from \"../components/Title\";\r\nimport {\r\n  getStudydetail,\r\n  joinStudy,\r\n  leaveStudy,\r\n  userMakeChat,\r\n  getIsMember,\r\n} from \"../_actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport Chat from \"../components/Chat\";\r\n\r\nconst Fix = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 1520px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  margin-top: 76px;\r\n`;\r\nconst Detail = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 43px;\r\n`;\r\nconst Row = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: 29px;\r\n`;\r\nconst Content = styled.div`\r\n  width: 274px;\r\n  margin-left: 14px;\r\n  margin-right: 55px;\r\n`;\r\nconst Lower = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 1520px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  margin-top: 140px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StudyDetail = ({ match }) => {\r\n  const { study_id } = match.params;\r\n  const user_id = window.localStorage.getItem(\"id\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [study, setStudy] = useState({\r\n    activate: \"\",\r\n    manner_temperature: \"\",\r\n    extra: \"\",\r\n    image: \"\",\r\n    leader: \"\",\r\n    leader_name: \"\",\r\n    link: \"\",\r\n    location: \"\",\r\n    participant: \"\",\r\n    size: \"\",\r\n    studyIntro: \"\",\r\n    study_idx: \"\",\r\n    tags: \"\",\r\n    termend: \"\",\r\n    termstart: \"\",\r\n    timeend: \"\",\r\n    timestart: \"\",\r\n    title: \"\",\r\n    type: \"\",\r\n  });\r\n  const [joinChange, setJoinChange] = useState(false);\r\n  const [isLeader, setIsLeader] = useState(false);\r\n  const [isMember, setIsMember] = useState(false);\r\n  const [member, setMember] = useState({\r\n    date: \"\",\r\n    participation: \"\",\r\n    warning: \"\",\r\n  });\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const room = useRef();\r\n\r\n  const openModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getIsMember(user_id, study_id)).then((response) => {\r\n      if (response.payload) {\r\n        setIsMember(true);\r\n        const userdetail = {\r\n          warning: response.payload.warning,\r\n          date: response.payload.joinDate.slice(0, 10),\r\n          participation: \"참여중\",\r\n        };\r\n        setMember(userdetail);\r\n      } else {\r\n        setIsMember(false);\r\n      }\r\n    });\r\n    dispatch(getStudydetail(study_id)).then((response) => {\r\n      if (response.payload) {\r\n        setStudy(response.payload);\r\n        console.log(response.payload);\r\n        if (String(response.payload.leader) === user_id) {\r\n          setIsLeader(true);\r\n        }\r\n      } else {\r\n        console.log(\"스터디 상세정보 가져오기 실패\");\r\n      }\r\n    });\r\n  }, [joinChange]);\r\n\r\n  const join = () => {\r\n    const user_id = window.localStorage.getItem(\"id\");\r\n    dispatch(joinStudy(user_id, study_id)).then((response) => {\r\n      if (response.payload) {\r\n        alert(\"스터디에 가입되었습니다.\");\r\n        setJoinChange(!joinChange);\r\n      } else {\r\n        console.log(\"스터디 가입 실패\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const leave = () => {\r\n    const user_id = window.localStorage.getItem(\"id\");\r\n    dispatch(leaveStudy(user_id, study_id)).then((response) => {\r\n      if (response.payload) {\r\n        alert(\"스터디에서 탈퇴되었습니다.\");\r\n        setJoinChange(!joinChange);\r\n      } else {\r\n        console.log(\"스터디 탈퇴 실패\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const userChat = () => {\r\n    const data = {\r\n      study_idx: study.study_idx,\r\n      leader_idx: study.leader,\r\n      user_idx: window.localStorage.getItem(\"id\"),\r\n    };\r\n    dispatch(userMakeChat(data)).then((response) => {\r\n      if (response.payload) {\r\n        room.current = response.payload.room_idx;\r\n        openModal();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fix>\r\n      <Header page=\"3\" />\r\n      {modalOpen ? (\r\n        <Chat\r\n          open={modalOpen}\r\n          close={closeModal}\r\n          header=\"\"\r\n          other_user={study.leader}\r\n          room_idx={room.current}\r\n        ></Chat>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Info>\r\n        <div>\r\n          <Image alt=\"study profile\" src={study.image} radius=\"10px\"></Image>\r\n        </div>\r\n        <Detail>\r\n          <Title size=\"32\" color=\"#064538\">\r\n            {study.title}\r\n          </Title>\r\n          <div\r\n            style={{\r\n              marginTop: \"30px\",\r\n              marginBottom: \"30px\",\r\n              border: \"3px solid #56BE9C\",\r\n              background: \"#56BE9C\",\r\n            }}\r\n          ></div>\r\n          <Row>\r\n            <div style={{ width: \"174px\" }}>\r\n              <Title size=\"20\">스터디장</Title>\r\n            </div>\r\n            <Content>\r\n              <Title weight=\"400\" size=\"20\">\r\n                {study.leader_name}\r\n              </Title>\r\n            </Content>\r\n            <div style={{ width: \"174px\" }}>\r\n              <Title size=\"20\">매너온도</Title>\r\n            </div>\r\n            <Content>\r\n              <Title weight=\"400\" size=\"20\">\r\n                {study.manner_temperature}℃\r\n              </Title>\r\n            </Content>\r\n          </Row>\r\n          <Row>\r\n            <div style={{ width: \"174px\" }}>\r\n              <Title size=\"20\">모집상태</Title>\r\n            </div>\r\n            <Content>\r\n              <Title weight=\"400\" size=\"20\">\r\n                {study.activate === \"Y\" ? \"모집중\" : \"모집 완료\"}\r\n              </Title>\r\n            </Content>\r\n            <div style={{ width: \"174px\" }}>\r\n              <Title size=\"20\">기간</Title>\r\n            </div>\r\n            <Content>\r\n              <Title weight=\"400\" size=\"20\">\r\n                {study.termstart} ~ {study.termend}\r\n              </Title>\r\n            </Content>\r\n          </Row>\r\n          <Row>\r\n            <div style={{ width: \"174px\" }}>\r\n              <Title size=\"20\">진행방식</Title>\r\n            </div>\r\n            <Content>\r\n              <Title weight=\"400\" size=\"20\">\r\n                {study.type === \"online\" ? \"온라인\" : \"오프라인\"}\r\n              </Title>\r\n            </Content>\r\n            <div style={{ width: \"174px\" }}>\r\n              <Title size=\"20\">시간</Title>\r\n            </div>\r\n            <Content>\r\n              <Title weight=\"400\" size=\"20\">\r\n                {study.timestart ? study.timestart.slice(0, 5) : \"00\"} ~{\" \"}\r\n                {study.timeend ? study.timeend.slice(0, 5) : \"00\"}\r\n              </Title>\r\n            </Content>\r\n          </Row>\r\n          <Row>\r\n            <div style={{ width: \"174px\" }}>\r\n              <Title size=\"20\">현재 / 최대 인원</Title>\r\n            </div>\r\n            <Content>\r\n              <Title weight=\"400\" size=\"20\">\r\n                {study.participant || 0} / {study.size}명\r\n              </Title>\r\n            </Content>\r\n            <div style={{ width: \"174px\" }}>\r\n              <Title size=\"20\">태그</Title>\r\n            </div>\r\n            <Content>\r\n              <Title weight=\"400\" size=\"20\">\r\n                {study.tags}\r\n              </Title>\r\n            </Content>\r\n          </Row>\r\n          <Row>\r\n            <div style={{ width: \"174px\" }}>\r\n              <Title size=\"20\">링크</Title>\r\n            </div>\r\n            <Content>\r\n              <Title weight=\"400\" size=\"20\">\r\n                {study.link}\r\n              </Title>\r\n            </Content>\r\n          </Row>\r\n          <div\r\n            style={{ border: \"1px solid #56BE9C\", marginBottom: \"30px\" }}\r\n          ></div>\r\n          <Row>\r\n            <div style={{ width: \"174px\" }}>\r\n              <Title size=\"20\">기타사항</Title>\r\n            </div>\r\n            <Title weight=\"400\" size=\"20\">\r\n              {study.extra}\r\n            </Title>\r\n          </Row>\r\n        </Detail>\r\n      </Info>\r\n      <Lower>\r\n        <button\r\n          style={{\r\n            width: \"180px\",\r\n            height: \"70px\",\r\n            background: \"#cccccc\",\r\n            border: \"none\",\r\n            borderRadius: \"10px\",\r\n            fontSize: \"24px\",\r\n            color: \"#ffffff\",\r\n            fontWeight: \"700\",\r\n            fontFamily: \"NotoSans\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => history.goBack()}\r\n        >\r\n          목록으로\r\n        </button>\r\n        {isLeader ? (\r\n          <button\r\n            style={{\r\n              width: \"282px\",\r\n              height: \"70px\",\r\n              background: \"#56Be9c\",\r\n              border: \"none\",\r\n              borderRadius: \"10px\",\r\n              fontSize: \"24px\",\r\n              color: \"#ffffff\",\r\n              fontWeight: \"700\",\r\n              fontFamily: \"NotoSans\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => history.push(`/editstudy/${study_id}`)}\r\n          >\r\n            스터디 수정하기\r\n          </button>\r\n        ) : isMember ? (\r\n          <div\r\n            style={{\r\n              background: \"#56BE9C\",\r\n              borderRadius: \"10px\",\r\n              width: \"386px\",\r\n              height: \"192px\",\r\n              marginTop: \"-120px\",\r\n              marginLeft: \"-530px\",\r\n              padding: \"39px 27px\",\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <div style={{ width: \"190px\" }}>\r\n                <Title color=\"white\" size=\"20\">\r\n                  가입일자\r\n                </Title>\r\n              </div>\r\n              <Title color=\"white\" size=\"20\" weight=\"400\">\r\n                {member.date}\r\n              </Title>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <div style={{ width: \"190px\" }}>\r\n                <Title color=\"white\" size=\"20\">\r\n                  나의 참여 여부\r\n                </Title>\r\n              </div>\r\n              <Title color=\"white\" size=\"20\" weight=\"400\">\r\n                {member.participation}\r\n              </Title>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <div style={{ width: \"190px\" }}>\r\n                <Title color=\"white\" size=\"20\">\r\n                  누적 경고 횟수\r\n                </Title>\r\n              </div>\r\n              <Title color=\"white\" size=\"20\" weight=\"400\">\r\n                {member.warning}회\r\n              </Title>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {isLeader ? (\r\n          <></>\r\n        ) : isMember ? (\r\n          <button\r\n            style={{\r\n              width: \"282px\",\r\n              height: \"70px\",\r\n              background: \"#cccccc\",\r\n              border: \"none\",\r\n              borderRadius: \"10px\",\r\n              fontSize: \"24px\",\r\n              color: \"#ffffff\",\r\n              fontWeight: \"700\",\r\n              fontFamily: \"NotoSans\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={leave}\r\n          >\r\n            탈퇴하기\r\n          </button>\r\n        ) : (\r\n          <div>\r\n            <button\r\n              style={{\r\n                width: \"180px\",\r\n                height: \"70px\",\r\n                background: \"#FFFFFF\",\r\n                border: \"1px solid #56Be9c\",\r\n                borderRadius: \"10px\",\r\n                fontSize: \"24px\",\r\n                color: \"#56Be9c\",\r\n                fontWeight: \"700\",\r\n                fontFamily: \"NotoSans\",\r\n                cursor: \"pointer\",\r\n                marginRight: \"15px\",\r\n              }}\r\n              onClick={userChat}\r\n            >\r\n              문의하기\r\n            </button>\r\n            <button\r\n              style={{\r\n                width: \"282px\",\r\n                height: \"70px\",\r\n                background: \"#56Be9c\",\r\n                border: \"none\",\r\n                borderRadius: \"10px\",\r\n                fontSize: \"24px\",\r\n                color: \"#ffffff\",\r\n                fontWeight: \"700\",\r\n                fontFamily: \"NotoSans\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={join}\r\n            >\r\n              가입 신청하기\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Lower>\r\n    </Fix>\r\n  );\r\n};\r\n\r\nexport default StudyDetail;\r\n","D:\\SwitMe\\FrontEnd\\src\\pages\\Signup.js",[],"D:\\SwitMe\\FrontEnd\\src\\pages\\FindEmail.js",[],"D:\\SwitMe\\FrontEnd\\src\\pages\\Login.js",[],"D:\\SwitMe\\FrontEnd\\src\\pages\\StopWatch.js",["156","157"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../components/Header\";\r\nimport Watch from \"../components/Watch\";\r\nimport TimerList from \"../components/TimerList\";\r\nimport ModalTimer from \"../components/ModalTimer\";\r\nimport TimerListContent from \"../components/TimerListContent\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-right: 200px;\r\n  padding-left: 200px;\r\n  padding-top: 118px;\r\n`;\r\n\r\nconst StopWatch = () => {\r\n  const [timer, setTimer] = useState({\r\n    timer_idx: \"\",\r\n    name: \"\",\r\n    duration: \"0:00:00\",\r\n  });\r\n\r\n  const [save, isSave] = useState(false);\r\n  const changeTimer = (newTimer) => {\r\n    setTimer(newTimer);\r\n  };\r\n  useEffect(() => {\r\n    console.log(save);\r\n  }, [timer, save]);\r\n\r\n  return (\r\n    <div>\r\n      <Header page=\"1\"></Header>\r\n      <Wrapper>\r\n        <TimerList changeTimer={changeTimer} change={save}></TimerList>\r\n        <Watch timer={timer} save={save} isSave={isSave}></Watch>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StopWatch;\r\n","D:\\SwitMe\\FrontEnd\\src\\pages\\MainPage.js",["158"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport styled from \"styled-components\";\r\nimport Title from \"../components/Title\";\r\nimport Image from \"../components/Image\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  getTotalTime,\r\n  getRanking,\r\n  getRankingstudy,\r\n  recommendedStudy,\r\n} from \"../_actions/actions\";\r\n\r\nconst Fix = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\nconst Upper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-top: 74px;\r\n  justify-content: center;\r\n`;\r\nconst Lower = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 65px;\r\n  align-items: center;\r\n`;\r\n\r\nconst Timer = styled.div`\r\n  width: 1000px;\r\n  height: 350px;\r\n  background-color: #56be9c;\r\n  display: inline-block;\r\n  border-radius: 10px;\r\n  margin-right: 40px;\r\n  margin-top: 18px;\r\n  padding: 97px 220px;\r\n`;\r\n\r\nconst Time = styled.div`\r\n  width: 560px;\r\n  height: 160px;\r\n  font-size: 110px;\r\n  font-family: \"NotoSans\";\r\n  font-weight: 700;\r\n  color: white;\r\n  line-height: 159.28px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Rank = styled.div`\r\n  border: 1px solid #56be9c;\r\n  border-radius: 10px;\r\n  padding: 40px 60px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 480px;\r\n  height: 350px;\r\n  margin-top: 18px;\r\n`;\r\nconst Circle = styled.div`\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  background-color: ${(props) => props.color || \"black\"};\r\n  display: inline-block;\r\n  margin-right: 8px;\r\n`;\r\nconst Slider = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 1520px;\r\n  flex-direction: row;\r\n  transition: 0.1s;\r\n`;\r\nconst Study = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-right: 40px;\r\n`;\r\n\r\nconst MainPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const hour = useRef(0);\r\n  const minute = useRef(0);\r\n  const second = useRef(0);\r\n  const [ranktoggle, setRankToggle] = useState(1);\r\n  const [typetoggle, setTypeToggle] = useState(1);\r\n  const [ranking, setRanking] = useState([]);\r\n  const [studyRanking, setStudyRanking] = useState([]);\r\n  const [studies, setStudies] = useState([]);\r\n  const move = useRef(0);\r\n  const move_max = useRef(0);\r\n\r\n  const slideRef = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTotalTime(window.localStorage.getItem(\"id\"))).then(\r\n      (response) => {\r\n        if (response.payload) {\r\n          const time = response.payload.cumulative_time;\r\n          second.current = time % 60;\r\n          minute.current = Math.floor(time / 60);\r\n          hour.current = Math.floor(time / 360);\r\n        } else {\r\n          console.log(\"공부 시간 가져오기 에러\");\r\n        }\r\n      }\r\n    );\r\n    dispatch(getRanking()).then((response) => {\r\n      if (response.payload) {\r\n        setRanking(response.payload);\r\n      } else {\r\n        console.log(\"랭킹 가져오기 에러\");\r\n      }\r\n    });\r\n    dispatch(getRankingstudy()).then((response) => {\r\n      if (response.payload) {\r\n        setStudyRanking(response.payload);\r\n      } else {\r\n        console.log(response);\r\n      }\r\n    });\r\n    dispatch(recommendedStudy()).then((response) => {\r\n      if (response.payload) {\r\n        setStudies(response.payload);\r\n        move_max.current = studies.length >= 6 ? (studies.length - 6) * 260 : 0;\r\n      } else {\r\n        console.log(\"추천 스터디 가져오기 에러\");\r\n      }\r\n    });\r\n    slideRef.current.style.transform = `translateX(-0%)`;\r\n  }, []);\r\n\r\n  const slide = (dir) => {\r\n    if (dir === \"left\" && move.current !== 0) {\r\n      move.current += 260;\r\n      slideRef.current.style.transform = `translateX(${move.current}px)`;\r\n    } else if (dir === \"right\" && move.current !== -move_max.current) {\r\n      move.current -= 260;\r\n      slideRef.current.style.transform = `translateX(${move.current}px)`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fix>\r\n      <Header page=\"0\" />\r\n      <Wrapper>\r\n        <Upper>\r\n          <div>\r\n            <Title>나의 누적 공부 시간</Title>\r\n            <div></div>\r\n            <Timer>\r\n              <Time>\r\n                {hour.current} :{\" \"}\r\n                {minute.current < 10\r\n                  ? \"0\" + minute.current.toString()\r\n                  : minute.current}{\" \"}\r\n                :{\" \"}\r\n                {second.current < 10\r\n                  ? \"0\" + second.current.toString()\r\n                  : second.current}\r\n              </Time>\r\n            </Timer>\r\n          </div>\r\n          <div>\r\n            <Title>누적 공부 시간 랭킹</Title>\r\n            {ranktoggle === 1 ? (\r\n              <span style={{ float: \"right\" }}>\r\n                <span\r\n                  style={{ marginRight: \"31px\", cursor: \"pointer\" }}\r\n                  onClick={() => setRankToggle(1)}\r\n                >\r\n                  <Circle />\r\n                  개인\r\n                </span>\r\n                <span\r\n                  style={{ color: \"#cccccc\", cursor: \"pointer\" }}\r\n                  onClick={() => setRankToggle(2)}\r\n                >\r\n                  <Circle color=\"#cccccc\" />\r\n                  스터디\r\n                </span>\r\n              </span>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <span\r\n                  style={{\r\n                    marginRight: \"31px\",\r\n                    color: \"#cccccc\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => setRankToggle(1)}\r\n                >\r\n                  <Circle color=\"#cccccc\" />\r\n                  개인\r\n                </span>\r\n                <span\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => setRankToggle(2)}\r\n                >\r\n                  <Circle />\r\n                  스터디\r\n                </span>\r\n              </span>\r\n            )}\r\n            <Rank>\r\n              {ranktoggle === 1\r\n                ? ranking?.map((person, i) => {\r\n                    return (\r\n                      <div\r\n                        key={i}\r\n                        style={{ marginBottom: \"16px\", height: \"43px\" }}\r\n                      >\r\n                        <Title width=\"60\" weight=\"400\" size=\"24\">\r\n                          {i + 1}위\r\n                        </Title>\r\n                        <Title width=\"140\" weight=\"400\" size=\"24\">\r\n                          {person.name}\r\n                        </Title>\r\n                        <Title\r\n                          width=\"150\"\r\n                          weight=\"700\"\r\n                          size=\"24\"\r\n                          color=\"#56BE9C\"\r\n                        >\r\n                          {Math.floor(person.cumulative_time / 360)} :{\" \"}\r\n                          {Math.floor(person.cumulative_time / 60) < 10\r\n                            ? \"0\" +\r\n                              Math.floor(person.cumulative_time / 60).toString()\r\n                            : Math.floor(person.cumulative_time / 60)}{\" \"}\r\n                          : {person.cumulative_time % 60}\r\n                        </Title>\r\n                      </div>\r\n                    );\r\n                  })\r\n                : studyRanking?.map((person, i) => {\r\n                    return (\r\n                      <div\r\n                        key={i}\r\n                        style={{ marginBottom: \"16px\", height: \"43px\" }}\r\n                      >\r\n                        <Title width=\"60\" weight=\"400\" size=\"24\">\r\n                          {i + 1}위\r\n                        </Title>\r\n                        <Title weight=\"400\" size=\"24\" width=\"140\">\r\n                          {person.name}\r\n                        </Title>\r\n                        <Title\r\n                          weight=\"700\"\r\n                          size=\"24\"\r\n                          width=\"150\"\r\n                          color=\"#56BE9C\"\r\n                        >\r\n                          {Math.floor(person.cumulative_time / 360)} :{\" \"}\r\n                          {Math.floor(person.cumulative_time / 60) < 10\r\n                            ? \"0\" +\r\n                              Math.floor(person.cumulative_time / 60).toString()\r\n                            : Math.floor(person.cumulative_time / 60)}{\" \"}\r\n                          : {person.cumulative_time % 60}\r\n                        </Title>\r\n                      </div>\r\n                    );\r\n                  })}\r\n            </Rank>\r\n          </div>\r\n        </Upper>\r\n        <Lower>\r\n          <div\r\n            style={{\r\n              width: \"1520px\",\r\n              display: \"inline-block\",\r\n            }}\r\n          >\r\n            <Title marginBottom=\"18\">추천 스터디</Title>\r\n            {typetoggle === 1 ? (\r\n              <span style={{ float: \"right\" }}>\r\n                <span\r\n                  style={{ marginRight: \"31px\", cursor: \"pointer\" }}\r\n                  onClick={() => setTypeToggle(1)}\r\n                >\r\n                  <Circle />\r\n                  온라인\r\n                </span>\r\n                <span\r\n                  style={{ color: \"#cccccc\", cursor: \"pointer\" }}\r\n                  onClick={() => setTypeToggle(2)}\r\n                >\r\n                  <Circle color=\"#cccccc\" />\r\n                  오프라인\r\n                </span>\r\n              </span>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <span\r\n                  style={{\r\n                    marginRight: \"31px\",\r\n                    color: \"#cccccc\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => setTypeToggle(1)}\r\n                >\r\n                  <Circle color=\"#cccccc\" />\r\n                  온라인\r\n                </span>\r\n                <span\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => setTypeToggle(2)}\r\n                >\r\n                  <Circle />\r\n                  오프라인\r\n                </span>\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              width: \"1640px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"18.81px\",\r\n                height: \"31.81px\",\r\n                marginTop: \"80px\",\r\n                marginRight: \"40px\",\r\n              }}\r\n              onClick={() => slide(\"left\")}\r\n            >\r\n              <Image\r\n                alt=\"left arrow\"\r\n                src={require(\"../assets/leftarrow.png\").default}\r\n                width=\"18.81\"\r\n                height=\"31.81\"\r\n              />\r\n            </div>\r\n            <div style={{ overflowX: \"hidden\" }}>\r\n              <Slider ref={slideRef}>\r\n                {studies.map((study, i) => {\r\n                  if (study.type === \"online\" && typetoggle === 2) return false;\r\n                  if (study.type === \"offline\" && typetoggle === 1)\r\n                    return false;\r\n                  return (\r\n                    <Study\r\n                      key={i}\r\n                      onClick={() =>\r\n                        history.push(`/studydetail/${study.study_idx}`)\r\n                      }\r\n                    >\r\n                      <Image\r\n                        alt=\"스터디 이미지\"\r\n                        src={study.image}\r\n                        height=\"190\"\r\n                      />\r\n                      <Title lineHeight=\"34.75\" size=\"24\" marginTop=\"11\">\r\n                        {study.title}\r\n                      </Title>\r\n                      <Title size=\"18\" weight=\"400\" lineHeight=\"26.06\">\r\n                        {study.participant || 0}명 / 매너온도{\" \"}\r\n                        {study.avgMannerTemperature}°C\r\n                      </Title>\r\n                      <div>\r\n                        <span style={{ size: \"18px\", color: \"#CCCCCC\" }}>\r\n                          {study.tags}\r\n                        </span>\r\n                      </div>\r\n                    </Study>\r\n                  );\r\n                })}\r\n              </Slider>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: \"18.81px\",\r\n                height: \"31.81px\",\r\n                marginTop: \"80px\",\r\n                marginLeft: \"40px\",\r\n              }}\r\n              onClick={() => slide(\"right\")}\r\n            >\r\n              <Image\r\n                alt=\"right arrow\"\r\n                src={require(\"../assets/rightarrow.png\").default}\r\n                width=\"18.81\"\r\n                height=\"31.81\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Lower>\r\n      </Wrapper>\r\n    </Fix>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","D:\\SwitMe\\FrontEnd\\src\\pages\\MemberList.js",["159","160","161"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../components/Header\";\r\nimport Title from \"../components/Title\";\r\nimport Input from \"../components/Input\";\r\nimport Search from \"../assets/search.png\";\r\nimport Image from \"../components/Image\";\r\nimport Warn from \"../components/Warn\";\r\nimport { getStudydetail, getMember, warnMember } from \"../_actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Fix = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-bottom: 50px;\r\n  margin-top: 3%;\r\n`;\r\nconst Row = styled.div`\r\n  width: 80%;\r\n  height: 90px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: ${(props) => props.border || \"1px solid #56be9c\"};\r\n`;\r\n\r\nconst MemberList = ({ match }) => {\r\n  const { study_id } = match.params;\r\n  console.log(study_id);\r\n  const dispatch = useDispatch();\r\n  const [study, setStudy] = useState(\"\");\r\n  const [members, setMembers] = useState([]);\r\n  const [isLeader, setIsLeader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getStudydetail(study_id)).then((response) => {\r\n      if (response.payload) {\r\n        console.log(response.payload);\r\n        setStudy(response.payload.title);\r\n        if (\r\n          response.payload.leader.toString() ===\r\n          window.localStorage.getItem(\"id\")\r\n        )\r\n          setIsLeader(true);\r\n      } else {\r\n        console.log(\"기존 스터디 정보 가져오기 실패\");\r\n      }\r\n    });\r\n    dispatch(getMember(study_id)).then((response) => {\r\n      if (response.payload) {\r\n        console.log(\"스터디 멤버 정보 가져오기 성공\");\r\n        console.log(response.payload);\r\n        setMembers(response.payload);\r\n      } else {\r\n        console.log(\"스터디 멤버 정보 가져오기 실패\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const warn = (user_idx) => {\r\n    const data = {\r\n      study_idx: study_id,\r\n      user_idx: user_idx,\r\n    };\r\n    console.log(data);\r\n    dispatch(warnMember(data)).then((response) => {\r\n      if (response.type) {\r\n        console.log(\"경고 성공\");\r\n        dispatch(getMember(study_id)).then((response) => {\r\n          if (response.payload) {\r\n            console.log(\"스터디 멤버 정보 가져오기 성공\");\r\n            console.log(response.payload);\r\n            setMembers(response.payload);\r\n          } else {\r\n            console.log(\"스터디 멤버 정보 가져오기 실패\");\r\n          }\r\n        });\r\n        openModal();\r\n      } else {\r\n        console.log(\"경고 주기 에러 발생\");\r\n        console.log(response);\r\n      }\r\n    });\r\n  };\r\n\r\n  //모달\r\n  // useState를 사용하여 open상태를 변경한다. (open일때 true로 만들어 열리는 방식)\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header page=\"3\" />\r\n      <Fix>\r\n        <Row border=\"none\" style={{ marginTop: \"1%\" }}>\r\n          <Title size=\"32\">{study}</Title>\r\n        </Row>\r\n        <div></div>\r\n        <Row border=\"none\">\r\n          <div\r\n            style={{\r\n              width: \"70%\",\r\n              marginLeft: \"30px\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              marginTop: \"2%\",\r\n            }}\r\n          >\r\n            <Title size=\"18\">스터디원 이름</Title>\r\n            <Title size=\"18\">매너온도</Title>\r\n            <Title size=\"18\">경고 횟수</Title>\r\n          </div>\r\n        </Row>\r\n        <div\r\n          style={{\r\n            width: \"80%\",\r\n            border: \"3px solid #56BE9C\",\r\n            background: \"#56BE9C\",\r\n          }}\r\n        ></div>\r\n        {members.map((member, i) => (\r\n          <Row>\r\n            <div\r\n              style={{\r\n                width: \"70%\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Image\r\n                  alt=\"profile\"\r\n                  src={member.user_image}\r\n                  // onerror={Default}\r\n                  // src={require(\"../assets/circle.png\").default}\r\n                  width=\"80\"\r\n                  height=\"80\"\r\n                />\r\n                &emsp;\r\n                <Title weight=\"400\" size=\"20\">\r\n                  {member.user_name}\r\n                </Title>\r\n              </div>\r\n              <Title weight=\"400\" size=\"20\">\r\n                {member.user_manner}°C\r\n              </Title>\r\n              <Title weight=\"400\" size=\"20\">\r\n                {member.user_warning}회\r\n              </Title>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"flex-end\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              {isLeader ? (\r\n                <button\r\n                  style={{\r\n                    border: \"1px solid #C70000\",\r\n                    borderRadius: \"10px\",\r\n                    background: \"white\",\r\n                    width: \"105px\",\r\n                    height: \"45px\",\r\n                    fontSize: \"20px\",\r\n                    color: \"#C70000\",\r\n                    fontFamily: \"NotoSans\",\r\n                    cursor: \"pointer\",\r\n                    marginRight: \"30px\",\r\n                  }}\r\n                  // onClick={openModal}\r\n                  onClick={() => warn(member.user_idx)}\r\n                >\r\n                  경고하기\r\n                </button>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n\r\n            <React.Fragment>\r\n              {/* header 부분에 텍스트를 입력한다. */}\r\n              <Warn open={modalOpen} close={closeModal} header=\"\"></Warn>\r\n            </React.Fragment>\r\n          </Row>\r\n        ))}\r\n      </Fix>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MemberList;\r\n","D:\\SwitMe\\FrontEnd\\src\\pages\\MakeStudy.js",["162"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../assets/logo.png\";\r\nimport Header from \"../components/Header\";\r\nimport Input from \"../components/Input\";\r\nimport Title from \"../components/Title\";\r\nimport Button from \"../components/Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makestudy } from \"../_actions/actions\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* height: 90vh; */\r\n`;\r\n\r\nconst Col = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Textbox = styled.div`\r\n  width: 11rem;\r\n`;\r\n\r\nconst Inputbox = styled.div`\r\n  width: 1000px;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  ul {\r\n    width: 140px;\r\n    display: none;\r\n    padding-left: 0px;\r\n    border: 1px solid #56be9c;\r\n    border-radius: 10px;\r\n    z-index: 1;\r\n    position: absolute;\r\n    margin-top: 65px;\r\n    overflow-y: scroll;\r\n    height: 200px;\r\n  }\r\n  li {\r\n    padding: 5px 10px;\r\n    list-style: none;\r\n    display: none;\r\n    border-radius: 10px;\r\n    :hover {\r\n      border: 1px solid #56be9c;\r\n    }\r\n  }\r\n  :hover {\r\n    ul,\r\n    li {\r\n      display: block;\r\n      cursor: pointer;\r\n      background-color: white;\r\n      z-index: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RadioButton = styled.input`\r\n  border: 1px solid #56be9c;\r\n  width: 41px;\r\n  height: 41px;\r\n`;\r\n\r\nconst MakeStudy = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [study, setStudy] = useState({\r\n    title: \"\",\r\n    type: \"online\",\r\n    termstart: \"\",\r\n    termend: \"\",\r\n    timestart: \"12:00\",\r\n    timeend: \"12:00\",\r\n    size: 0,\r\n    tags: \"\",\r\n    location: \"\",\r\n    extra: \"\",\r\n    image: \"\", //추후에 이미지 받아오는 부분 구현되면 formData로 보내기\r\n    link: \"\",\r\n    leader: 0,\r\n  });\r\n\r\n  const onFormSubmit = () => {\r\n    const data = {\r\n      title: study.title,\r\n      type: study.type,\r\n      termstart: study.termstart,\r\n      termend: study.termend,\r\n      timestart: study.timestart + \":00\",\r\n      timeend: study.timeend + \":00\",\r\n      size: study.size,\r\n      tags: study.tags,\r\n      location: study.location,\r\n      extra: study.extra,\r\n      image: study.image, //추후에 이미지 받아오는 부분 구현되면 formData로 보내기\r\n      link: study.link,\r\n      leader: window.localStorage.getItem(\"id\"),\r\n    };\r\n    console.log(data);\r\n    dispatch(makestudy(data)).then((response) => {\r\n      if (response.type) {\r\n        alert(\"스터디가 생성되었습니다..\");\r\n        history.push(`/`);\r\n      } else {\r\n        console.log(\"스터디 생성 실패\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setStudy({ ...study, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header page=\"3\" />\r\n      <Row style={{ marginTop: \"40px\" }}>\r\n        <Col>\r\n          <div style={{ marginLeft: \"10px\" }}>\r\n            <Title>스터디 개설하기</Title>\r\n          </div>\r\n          <img\r\n            alt=\"study profile\"\r\n            src={require(\"../assets/rectangle.png\").default}\r\n            style={{\r\n              width: \"220px\",\r\n              height: \"220px\",\r\n              marginTop: \"20px\",\r\n              marginBottom: \"20px\",\r\n            }}\r\n          />\r\n          <Button\r\n            name=\"이미지 추가하기\"\r\n            width=\"220px\"\r\n            height=\"70px\"\r\n            color=\"#56BE9C\"\r\n          ></Button>\r\n        </Col>\r\n\r\n        <Col style={{ marginLeft: \"40px\" }}>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <Textbox>\r\n              <Title>스터디 이름</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Input\r\n                name=\"title\"\r\n                value={study.title}\r\n                placeholder=\"스터디의 이름을 작성해주세요\"\r\n                width=\"1000\"\r\n                inputwidth=\"950\"\r\n                marginTop=\"18\"\r\n                validinput=\"true\"\r\n                onChange={onInputChange}\r\n              ></Input>\r\n            </Inputbox>\r\n          </Row>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <Textbox>\r\n              <Title>진행 방식</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Row style={{ paddingTop: \"18px\" }}>\r\n                <Col>\r\n                  <RadioButton\r\n                    type=\"radio\"\r\n                    id=\"online\"\r\n                    name=\"onoff\"\r\n                    onChange={() => setStudy({ ...study, type: \"online\" })}\r\n                  ></RadioButton>\r\n                </Col>\r\n                <Col\r\n                  style={{\r\n                    padding: \"6px\",\r\n                    paddingLeft: \"20px\",\r\n                    fontSize: \"20px\",\r\n                    marginRight: \"45px\",\r\n                  }}\r\n                >\r\n                  <label id=\"online\">온라인</label>\r\n                </Col>\r\n                <Col>\r\n                  <RadioButton\r\n                    type=\"radio\"\r\n                    id=\"offline\"\r\n                    name=\"onoff\"\r\n                    onChange={() => setStudy({ ...study, type: \"offline\" })}\r\n                  ></RadioButton>\r\n                </Col>\r\n                <Col\r\n                  style={{\r\n                    padding: \"6px\",\r\n                    paddingLeft: \"20px\",\r\n                    fontSize: \"20px\",\r\n                    marginRight: \"45px\",\r\n                  }}\r\n                >\r\n                  <label id=\"offline\">오프라인</label>\r\n                </Col>\r\n              </Row>\r\n            </Inputbox>\r\n          </Row>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <Textbox>\r\n              <Title>기간</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Input\r\n                name=\"termstart\"\r\n                value={study.termstart}\r\n                placeholder=\"날짜를 선택하세요\"\r\n                width=\"300\"\r\n                inputwidth=\"160\"\r\n                marginTop=\"18\"\r\n                validinput=\"true\"\r\n                onChange={onInputChange}\r\n              ></Input>\r\n              <div style={{ margin: \"15px\", marginTop: \"30px\" }}>\r\n                <img\r\n                  alt=\"line\"\r\n                  src={require(\"../assets/line.png\").default}\r\n                  style={{ width: \"57px\", height: \"3px\" }}\r\n                />\r\n              </div>\r\n              <Input\r\n                name=\"termend\"\r\n                value={study.termend}\r\n                placeholder=\"날짜를 선택하세요\"\r\n                width=\"300\"\r\n                inputwidth=\"160\"\r\n                marginTop=\"18\"\r\n                validinput=\"true\"\r\n                onChange={onInputChange}\r\n              ></Input>\r\n            </Inputbox>\r\n          </Row>\r\n\r\n          {/*dropdown */}\r\n          <Row\r\n            style={{\r\n              alignItems: \"center\",\r\n              marginTop: \"18px\",\r\n              marginBottom: \"18px\",\r\n            }}\r\n          >\r\n            <Textbox>\r\n              <Title>시간</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Item>\r\n                <Input width=\"141\" height=\"65\">\r\n                  <Title size=\"20\" weight=\"400\">\r\n                    {study.timestart}\r\n                  </Title>\r\n                  <img\r\n                    alt=\"dropdown\"\r\n                    src={require(\"../assets/dropdown.png\").default}\r\n                    style={{ marginLeft: \"21px\" }}\r\n                  />\r\n                </Input>\r\n                <ul>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"00:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      00:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"01:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      01:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"02:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      02:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"03:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      03:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"04:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      04:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"05:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      05:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"06:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      06:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"07:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      07:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"08:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      08:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"09:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      09:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"10:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      10:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"11:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      11:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"12:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      12:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"13:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      13:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"14:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      14:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"15:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      15:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"16:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      16:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"17:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      17:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"18:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      18:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"19:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      19:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"20:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      20:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"21:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      21:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"22:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      22:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"23:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      23:00\r\n                    </Title>\r\n                  </li>\r\n                </ul>\r\n              </Item>\r\n              <div style={{ margin: \"15px\" }}>\r\n                <img\r\n                  alt=\"line\"\r\n                  src={require(\"../assets/line.png\").default}\r\n                  style={{ width: \"57px\", height: \"3px\" }}\r\n                />\r\n              </div>\r\n              <Item>\r\n                <Input width=\"141\" height=\"65\">\r\n                  <Title size=\"20\" weight=\"400\">\r\n                    {study.timeend}\r\n                  </Title>\r\n                  <img\r\n                    alt=\"dropdown\"\r\n                    src={require(\"../assets/dropdown.png\").default}\r\n                    style={{ marginLeft: \"21px\" }}\r\n                  />\r\n                </Input>\r\n                <ul>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"00:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      00:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"01:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      01:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"02:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      02:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"03:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      03:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"04:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      04:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"05:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      05:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"06:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      06:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"07:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      07:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"08:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      08:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"09:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      09:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"10:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      10:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"11:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      11:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"12:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      12:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"13:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      13:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"14:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      14:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"15:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      15:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"16:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      16:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"17:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      17:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"18:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      18:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"19:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      19:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"20:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      20:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"21:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      21:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"22:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      22:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"23:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      23:00\r\n                    </Title>\r\n                  </li>\r\n                </ul>\r\n              </Item>\r\n            </Inputbox>\r\n          </Row>\r\n          <Row\r\n            style={{\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Textbox>\r\n              <Title>최대 모집 인원</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Item>\r\n                <Input width=\"141\" height=\"65\">\r\n                  <Title size=\"20\" weight=\"400\">\r\n                    {study.size}\r\n                  </Title>\r\n                  <img\r\n                    alt=\"dropdown\"\r\n                    src={require(\"../assets/dropdown.png\").default}\r\n                    style={{ marginLeft: \"21px\" }}\r\n                  />\r\n                </Input>\r\n                <ul>\r\n                  <li onClick={() => setStudy({ ...study, size: 0 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      0\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 1 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      1\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 2 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      2\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 3 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      3\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 4 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      4\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 5 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      5\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 6 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      6\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 7 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      7\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 8 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      8\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 9 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      9\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 10 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      10\r\n                    </Title>\r\n                  </li>\r\n                </ul>\r\n              </Item>\r\n            </Inputbox>\r\n          </Row>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <Textbox>\r\n              <Title>태그</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Input\r\n                name=\"tags\"\r\n                value={study.tags}\r\n                placeholder=\"태그를 입력하세요\"\r\n                width=\"1000\"\r\n                inputwidth=\"950\"\r\n                marginTop=\"18\"\r\n                validinput=\"true\"\r\n                onChange={onInputChange}\r\n              ></Input>\r\n            </Inputbox>\r\n          </Row>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            {study.type === \"online\" ? (\r\n              <>\r\n                <Textbox>\r\n                  <Title>링크</Title>\r\n                </Textbox>\r\n                <Inputbox>\r\n                  <Input\r\n                    name=\"link\"\r\n                    value={study.link}\r\n                    placeholder=\"사용하실 온라인 회의 링크를 입력하세요 (Zoom, Google Meet 등)\"\r\n                    width=\"1000\"\r\n                    inputwidth=\"950\"\r\n                    marginTop=\"18\"\r\n                    validinput=\"true\"\r\n                    onChange={onInputChange}\r\n                  ></Input>\r\n                </Inputbox>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Textbox>\r\n                  <Title>장소</Title>\r\n                </Textbox>\r\n                <Inputbox>\r\n                  <Input\r\n                    placeholder=\"장소찾기\"\r\n                    width=\"178\"\r\n                    inputwidth=\"110\"\r\n                    marginTop=\"18\"\r\n                    validinput=\"true\"\r\n                  >\r\n                    <img\r\n                      alt=\"dropdown\"\r\n                      src={require(\"../assets/vector.png\").default}\r\n                    />\r\n                  </Input>\r\n                </Inputbox>\r\n              </>\r\n            )}\r\n          </Row>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <Textbox>\r\n              <Title>기타 사항</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Input\r\n                name=\"extra\"\r\n                value={study.extra}\r\n                placeholder=\"추가적인 사항을 기재해주세요 (조용한 정도, 타이핑/마우스 사용 여부 등)\"\r\n                width=\"1000\"\r\n                inputwidth=\"950\"\r\n                marginTop=\"18\"\r\n                validinput=\"true\"\r\n                onChange={onInputChange}\r\n              ></Input>\r\n            </Inputbox>\r\n          </Row>\r\n          <Row\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              marginTop: \"120px\",\r\n            }}\r\n          >\r\n            <Button\r\n              name=\"이전으로\"\r\n              width=\"180px\"\r\n              height=\"70px\"\r\n              color=\"#CCCCCC\"\r\n            ></Button>\r\n            <Button\r\n              name=\"스터디 개설하기\"\r\n              width=\"220px\"\r\n              height=\"70px\"\r\n              color=\"#56BE9C\"\r\n              onClick={onFormSubmit}\r\n            ></Button>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MakeStudy;\r\n","D:\\SwitMe\\FrontEnd\\src\\pages\\Mypage.js",["163","164","165","166"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../assets/logo.png\";\r\nimport Button from \"../components/Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Header from \"../components/Header\";\r\nimport Image from \"../components/Image\";\r\nimport Title from \"../components/Title\";\r\nimport {\r\n  getUserInfo,\r\n  getUserStopwatch,\r\n  getUserStudy,\r\n} from \"../_actions/actions\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* height: 90vh; */\r\n`;\r\n\r\nconst Col = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ProfileBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  border: #56be9c 1px solid;\r\n  border-radius: 5px;\r\n  padding-left: 48px;\r\n  padding-right: 24px;\r\n  padding-top: 32px;\r\n  padding-bottom: 28px;\r\n  width: 1520px;\r\n  height: 220px;\r\n`;\r\n\r\nconst ListBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: #56be9c 1px solid;\r\n  border-radius: 5px;\r\n  padding: 25px;\r\n  width: 739px;\r\n  height: 441px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst Study = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 739px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Circle = styled.div`\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  background-color: ${(props) => props.color || \"black\"};\r\n  display: inline-block;\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst Mypage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [studytoggle, setStudyToggle] = useState(1);\r\n  const [user, setUser] = useState({\r\n    user_idx: \"\",\r\n    user_email: \"\",\r\n    username: \"\",\r\n    user_image: \"\",\r\n    user_manner: \"\",\r\n  });\r\n  const [studies, setStudies] = useState([]);\r\n\r\n  const [times, setTimes] = useState([]);\r\n  useEffect(() => {\r\n    const user_id = window.localStorage.getItem(\"id\");\r\n    dispatch(getUserInfo(user_id)).then((response) => {\r\n      if (response.payload) {\r\n        setUser(response.payload);\r\n        console.log(response.payload);\r\n      } else {\r\n        console.log(\"회원정보 가져오기 에러\");\r\n      }\r\n    });\r\n    dispatch(getUserStudy(user_id)).then((response) => {\r\n      if (response.payload) {\r\n        setStudies(response.payload);\r\n        console.log(response.payload);\r\n      } else {\r\n        console.log(\"스터디 목록 가져오기 에러\");\r\n      }\r\n    });\r\n    dispatch(getUserStopwatch(user_id)).then((response) => {\r\n      if (response.payload) {\r\n        let arr = [];\r\n        response.payload?.map((log, i) => {\r\n          const start_date = log.start_time.slice(0, 10);\r\n          const end_date = log.end_time.slice(0, 10);\r\n          const start_time = log.start_time.slice(11);\r\n          const end_time = log.end_time.slice(11);\r\n          const hour = Math.floor(log.duration / 360);\r\n          const minute = Math.floor(log.duration / 60);\r\n          const strminute = minute < 10 ? \"0\" + minute : minute;\r\n          const second = log.duration % 60;\r\n          const strsecond = second < 10 ? \"0\" + second : second;\r\n          arr.push({\r\n            start_date: start_date,\r\n            end_date: end_date,\r\n            start_time: start_time,\r\n            end_time: end_time,\r\n            total: String(hour) + \" : \" + strminute + \" : \" + strsecond,\r\n          });\r\n        });\r\n        setTimes(arr);\r\n      } else {\r\n        console.log(\"스톱워치 목록 가져오기 에러\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    window.localStorage.setItem(\"isAuth\", \"false\");\r\n    window.localStorage.setItem(\"id\", \"\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header page=\"3\" />\r\n      <Col>\r\n        <Row\r\n          style={{\r\n            width: \"1520px\",\r\n            marginTop: \"118px\",\r\n            marginBottom: \"18px\",\r\n            justifyContent: \"flex-start\",\r\n          }}\r\n        >\r\n          <Title>내정보</Title>\r\n        </Row>\r\n        <ProfileBox>\r\n          <Row style={{ justifyContent: \"space-between\", width: \"850px\" }}>\r\n            <Col>\r\n              <Image\r\n                alt=\"profile\"\r\n                src={user.user_image}\r\n                width=\"124\"\r\n                height=\"124\"\r\n                radius=\"60\"\r\n              />\r\n            </Col>\r\n            <Col style={{ width: \"660px\" }}>\r\n              <Title size=\"32\" color=\"#064538\">\r\n                {user.user_name}\r\n              </Title>\r\n              <br />\r\n              <Title size=\"24\" weight=\"400\" marginBottom=\"5\">\r\n                학교 인증 완료\r\n              </Title>\r\n\r\n              <Title size=\"24\" weight=\"400\" marginBottom=\"5\">\r\n                {user.user_email}\r\n              </Title>\r\n\r\n              <Title size=\"24\" weight=\"400\" marginBottom=\"5\">\r\n                매너온도 {user.user_manner}°C\r\n              </Title>\r\n            </Col>\r\n          </Row>\r\n          <Button\r\n            name=\"회원정보수정\"\r\n            width=\"251px\"\r\n            height=\"65px\"\r\n            color=\"var(--middle)\"\r\n            borderRadius=\"40px\"\r\n            onClick={() => history.push(\"/edituser\")}\r\n          ></Button>\r\n          <Button\r\n            name=\"로그아웃\"\r\n            width=\"251px\"\r\n            height=\"65px\"\r\n            color=\"#CCCCCC\"\r\n            borderRadius=\"40px\"\r\n            onClick={logout}\r\n          ></Button>\r\n        </ProfileBox>\r\n        <Row\r\n          style={{\r\n            justifyContent: \"space-between\",\r\n            marginTop: \"103px\",\r\n            marginBottom: \"18px\",\r\n          }}\r\n        >\r\n          <Row style={{ width: \"739px\", justifyContent: \"space-between\" }}>\r\n            <Title>참여 스터디 목록</Title>\r\n            {studytoggle === 1 ? (\r\n              <span style={{ float: \"right\" }}>\r\n                <span\r\n                  style={{ marginRight: \"31px\", cursor: \"pointer\" }}\r\n                  onClick={() => setStudyToggle(1)}\r\n                >\r\n                  <Circle />\r\n                  활동중\r\n                </span>\r\n                <span\r\n                  style={{ color: \"#cccccc\", cursor: \"pointer\" }}\r\n                  onClick={() => setStudyToggle(2)}\r\n                >\r\n                  <Circle color=\"#cccccc\" />\r\n                  종료\r\n                </span>\r\n              </span>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <span\r\n                  style={{\r\n                    marginRight: \"31px\",\r\n                    color: \"#cccccc\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => setStudyToggle(1)}\r\n                >\r\n                  <Circle color=\"#cccccc\" />\r\n                  활동중\r\n                </span>\r\n                <span\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => setStudyToggle(2)}\r\n                >\r\n                  <Circle />\r\n                  종료\r\n                </span>\r\n              </span>\r\n            )}\r\n          </Row>\r\n          <Row style={{ width: \"739px\", justifyContent: \"flex-start\" }}>\r\n            <Title>스톱워치 사용 기록</Title>\r\n          </Row>\r\n        </Row>\r\n        <Row>\r\n          <ListBox style={{ marginRight: \"40px\" }}>\r\n            {studytoggle === 1\r\n              ? studies.map((study, i) => {\r\n                  if (study.activate === \"N\") return false;\r\n                  return (\r\n                    <Study key={i}>\r\n                      <img\r\n                        alt=\"study profile\"\r\n                        src={study.study_image}\r\n                        style={{\r\n                          width: \"60px\",\r\n                          height: \"60px\",\r\n                          marginLeft: \"10px\",\r\n                          marginRight: \"20px\",\r\n                        }}\r\n                      />\r\n                      <Col\r\n                        style={{ width: \"350px\", cursor: \"pointer\" }}\r\n                        onClick={() =>\r\n                          history.push(`studydetail/${study.study_idx}`)\r\n                        }\r\n                      >\r\n                        <div style={{ width: \"97px\" }}>\r\n                          <Title width=\"150\" size=\"20\" weight=\"700\">\r\n                            {study.study_title}\r\n                          </Title>\r\n                        </div>\r\n                        <div style={{ width: \"200px\" }}>\r\n                          <Title size=\"18\" color=\"#CCCCCC\" weight=\"400\">\r\n                            {study.start_date} - {study.end_date}\r\n                          </Title>\r\n                        </div>\r\n                      </Col>\r\n                      <div style={{ width: \"160px\", marginRight: \"30px\" }}>\r\n                        <Title size=\"24\" weight=\"400\" color=\"#56BE9C\">\r\n                          누적 경고 {study.warning}회\r\n                        </Title>\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          width: \"120px\",\r\n                          marginRight: \"58px\",\r\n                        }}\r\n                      >\r\n                        <Title\r\n                          size=\"24\"\r\n                          weight=\"400\"\r\n                          color=\"#56BE9C\"\r\n                          style={{ cursor: \"pointer\" }}\r\n                          onClick={() =>\r\n                            history.push(`/memberlist/${study.study_idx}`)\r\n                          }\r\n                        >\r\n                          멤버 보기\r\n                        </Title>\r\n                      </div>\r\n                    </Study>\r\n                  );\r\n                })\r\n              : studies.map((study, i) => {\r\n                  if (study.activate === \"Y\") return false;\r\n                  return (\r\n                    <Study\r\n                      key={i}\r\n                      onClick={() =>\r\n                        history.push(`studydetail/${study.study_idx}`)\r\n                      }\r\n                    >\r\n                      <img\r\n                        alt=\"study profile\"\r\n                        src={study.study_image}\r\n                        style={{\r\n                          width: \"60px\",\r\n                          height: \"60px\",\r\n                          marginLeft: \"58px\",\r\n                        }}\r\n                      />\r\n                      <Col\r\n                        style={{ width: \"350px\", cursor: \"pointer\" }}\r\n                        onClick={() =>\r\n                          history.push(`studydetail/${study.study_idx}`)\r\n                        }\r\n                      >\r\n                        <div style={{ width: \"97px\" }}>\r\n                          <Title width=\"150\" size=\"20\" weight=\"700\">\r\n                            {study.study_title}\r\n                          </Title>\r\n                        </div>\r\n                        <div style={{ width: \"270px\" }}>\r\n                          <Title size=\"18\" color=\"#CCCCCC\" weight=\"400\">\r\n                            {study.start_date} - {study.end_date}\r\n                          </Title>\r\n                        </div>\r\n                      </Col>\r\n                      <div style={{ width: \"152px\", marginRight: \"58px\" }}>\r\n                        <Title size=\"24\" weight=\"400\" color=\"#56BE9C\">\r\n                          누적 경고 {study.warning}회\r\n                        </Title>\r\n                      </div>\r\n                    </Study>\r\n                  );\r\n                })}\r\n          </ListBox>\r\n          <ListBox>\r\n            {times.map((study, i) => {\r\n              return (\r\n                <Study key={i}>\r\n                  <Col style={{ marginLeft: \"30px\" }}>\r\n                    <div style={{ width: \"141px\" }}>\r\n                      <Title size=\"20\" weight=\"400\">\r\n                        {study.start_date === study.end_date\r\n                          ? study.start_date\r\n                          : String(study.start_date) +\r\n                            \" - \" +\r\n                            String(study.end_date)}\r\n                      </Title>\r\n                    </div>\r\n                    <div style={{ width: \"270px\", marginLeft: \"50px\" }}>\r\n                      {study.start_time} - {study.end_time}\r\n                    </div>\r\n                  </Col>\r\n                  <div style={{ width: \"152px\", marginRight: \"58px\" }}>\r\n                    <Title size=\"20\" weight=\"400\" color=\"#56BE9C\">\r\n                      {study.total}\r\n                    </Title>\r\n                  </div>\r\n                </Study>\r\n              );\r\n            })}\r\n          </ListBox>\r\n        </Row>\r\n      </Col>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Mypage;\r\n","D:\\SwitMe\\FrontEnd\\src\\pages\\StudyList.js",["167"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../components/Header\";\r\nimport Input from \"../components/Input\";\r\nimport Title from \"../components/Title\";\r\nimport Image from \"../components/Image\";\r\nimport { getStudylist, getStudylistAll } from \"../_actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Fix = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-bottom: 50px;\r\n`;\r\nconst Search = styled.div`\r\n  width: 790%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\nconst Item = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 74px;\r\n  & + & {\r\n    margin-left: 25px;\r\n  }\r\n  ul {\r\n    width: 125px;\r\n    display: none;\r\n    padding-left: 0px;\r\n    border: 1px solid #56be9c;\r\n    border-radius: 10px;\r\n    z-index: 1;\r\n    position: absolute;\r\n    margin-top: 108px;\r\n  }\r\n  li {\r\n    padding: 5px 10px;\r\n    list-style: none;\r\n    display: none;\r\n    border-radius: 10px;\r\n    :hover {\r\n      border: 1px solid #56be9c;\r\n    }\r\n  }\r\n  :hover {\r\n    ul,\r\n    li {\r\n      display: block;\r\n      cursor: pointer;\r\n      background-color: white;\r\n      z-index: 1;\r\n    }\r\n  }\r\n`;\r\nconst List = styled.div`\r\n  width: 1520px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Study = styled.div`\r\n  width: 1520px;\r\n  height: 92px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid #56be9c;\r\n`;\r\nconst State = styled.div`\r\n  width: 105px;\r\n  height: 45px;\r\n  border: ${(props) => props.color || \"black\"} 1px solid;\r\n  color: ${(props) => props.color || \"black\"};\r\n  font-size: 20px;\r\n  font-family: \"NotoSans\";\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  padding: 7px 0px;\r\n`;\r\n\r\nconst StudyList = () => {\r\n  const [search, setSearch] = useState({\r\n    title: \"\",\r\n    activate: \"\",\r\n    type: \"\",\r\n    size: \"\",\r\n    tags: \"\",\r\n    leader: \"\",\r\n    participant: \"\",\r\n  });\r\n  const [studies, setStudies] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSearch({ ...search, [name]: value });\r\n    console.log(search);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getStudylistAll()).then((response) => {\r\n      if (response.payload) {\r\n        console.log(response.payload);\r\n        setStudies(response.payload);\r\n      } else {\r\n        console.log(\"모든 스터디 목록 에러\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onFormSubmit = async (evt) => {\r\n    console.log(search);\r\n    evt.preventDefault();\r\n    dispatch(getStudylist(search)).then((response) => {\r\n      if (response.payload) {\r\n        console.log(response.payload);\r\n        setStudies(response.payload);\r\n      } else {\r\n        alert(\"스터디 검색 오류\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fix>\r\n      <Header page=\"2\" />\r\n      <Search>\r\n        <Item>\r\n          <Title>스터디 이름</Title>\r\n          <Input\r\n            name=\"title\"\r\n            placeholder=\"검색어를 입력하세요.\"\r\n            width=\"368\"\r\n            inputwidth=\"300\"\r\n            marginTop=\"18\"\r\n            validinput=\"true\"\r\n            onChange={onInputChange}\r\n          >\r\n            <button\r\n              style={{ background: \"none\", border: \"none\" }}\r\n              onClick={onFormSubmit}\r\n            >\r\n              <img\r\n                alt=\"search\"\r\n                src={require(\"../assets/search.png\").default}\r\n                style={{ width: \"16px\", height: \"18px\", cursor: \"pointer\" }}\r\n              />\r\n            </button>\r\n          </Input>\r\n        </Item>\r\n        <Item>\r\n          <Title>모집상태</Title>\r\n          <Input placeholder=\"검색어를 입력하세요.\" width=\"127\" marginTop=\"18\">\r\n            <Title size=\"20\" weight=\"400\">\r\n              {search.activate === \"\"\r\n                ? \"전체\"\r\n                : search.activate === \"Y\"\r\n                ? \"모집중\"\r\n                : \"모집 완료\"}\r\n            </Title>\r\n            <img\r\n              alt=\"dropdown\"\r\n              src={require(\"../assets/dropdown.png\").default}\r\n              style={{ marginLeft: \"21px\" }}\r\n            />\r\n          </Input>\r\n          <ul>\r\n            <li onClick={() => setSearch({ ...search, activate: \"\" })}>\r\n              <Title size=\"20\" weight=\"400\">\r\n                전체\r\n              </Title>\r\n            </li>\r\n            <li onClick={() => setSearch({ ...search, activate: \"Y\" })}>\r\n              <Title size=\"20\" weight=\"400\">\r\n                모집 중\r\n              </Title>\r\n            </li>\r\n            <li onClick={() => setSearch({ ...search, activate: \"N\" })}>\r\n              <Title size=\"20\" weight=\"400\">\r\n                모집 완료\r\n              </Title>\r\n            </li>\r\n          </ul>\r\n        </Item>\r\n        <Item>\r\n          <Title>진행방식</Title>\r\n          <Input placeholder=\"검색어를 입력하세요.\" width=\"127\" marginTop=\"18\">\r\n            <Title size=\"20\" weight=\"400\">\r\n              {search.type === \"\"\r\n                ? \"전체\"\r\n                : search.type === \"online\"\r\n                ? \"온라인\"\r\n                : \"오프라인\"}\r\n            </Title>\r\n            <img\r\n              alt=\"dropdown\"\r\n              src={require(\"../assets/dropdown.png\").default}\r\n              style={{ marginLeft: \"21px\" }}\r\n            />\r\n          </Input>\r\n          <ul>\r\n            <li onClick={() => setSearch({ ...search, type: \"\" })}>\r\n              <Title size=\"20\" weight=\"400\">\r\n                전체\r\n              </Title>\r\n            </li>\r\n            <li onClick={() => setSearch({ ...search, type: \"online\" })}>\r\n              <Title size=\"20\" weight=\"400\">\r\n                온라인\r\n              </Title>\r\n            </li>\r\n            <li onClick={() => setSearch({ ...search, type: \"offline\" })}>\r\n              <Title size=\"20\" weight=\"400\">\r\n                오프라인\r\n              </Title>\r\n            </li>\r\n          </ul>\r\n        </Item>\r\n        <Item>\r\n          <Title>최대인원</Title>\r\n          <Input\r\n            name=\"size\"\r\n            placeholder=\"Search\"\r\n            width=\"134\"\r\n            marginTop=\"18\"\r\n            validinput=\"true\"\r\n            inputwidth=\"80\"\r\n            onChange={onInputChange}\r\n          ></Input>\r\n        </Item>\r\n        <Item>\r\n          <Title>스터디장</Title>\r\n          <Input\r\n            name=\"leader\"\r\n            placeholder=\"Search\"\r\n            width=\"267\"\r\n            marginTop=\"18\"\r\n            validinput=\"true\"\r\n            inputwidth=\"200\"\r\n            onChange={onInputChange}\r\n          ></Input>\r\n        </Item>\r\n        <Item>\r\n          <Title>태그</Title>\r\n          <Input\r\n            name=\"tags\"\r\n            placeholder=\"Search\"\r\n            width=\"372\"\r\n            marginTop=\"18\"\r\n            validinput=\"true\"\r\n            inputwidth=\"350\"\r\n            onChange={onInputChange}\r\n          ></Input>\r\n        </Item>\r\n      </Search>\r\n      <List>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            marginTop: \"65px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <Title>검색결과</Title>\r\n          </div>\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <div\r\n              style={{\r\n                width: \"14.7px\",\r\n                height: \"25px\",\r\n                marginRight: \"72px\",\r\n              }}\r\n              onClick={() => console.log(\"왼쪽\")}\r\n            >\r\n              <Image\r\n                alt=\"left arrow\"\r\n                src={require(\"../assets/leftarrow.png\").default}\r\n                width=\"14.7px\"\r\n                height=\"25px\"\r\n              />\r\n            </div>\r\n            <Title color=\"#56BE9C\">2/11</Title>\r\n            <div\r\n              style={{\r\n                width: \"14.7px\",\r\n                height: \"25px\",\r\n                marginLeft: \"72px\",\r\n              }}\r\n              onClick={() => console.log(\"오른쪽\")}\r\n            >\r\n              <Image\r\n                alt=\"right arrow\"\r\n                src={require(\"../assets/rightarrow.png\").default}\r\n                width=\"14.7px\"\r\n                height=\"25px\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"1520px\",\r\n            border: \"3px solid #56BE9C\",\r\n            marginTop: \"19px\",\r\n            background: \"#56BE9C\",\r\n          }}\r\n        ></div>\r\n        {studies?.map((study, i) => {\r\n          if (i > 5) return false;\r\n          let statecolor = \"#FFE600\";\r\n          if (study.activate === \"Y\") statecolor = \"#56BE9C\";\r\n          else statecolor = \"#C70000\";\r\n          return (\r\n            <Study key={i}>\r\n              <img\r\n                alt=\"study profile\"\r\n                src={study.image}\r\n                style={{ width: \"60px\", height: \"60px\", marginRight: \"24px\" }}\r\n              />\r\n              <div\r\n                style={{ width: \"223px\", cursor: \"pointer\" }}\r\n                onClick={() => history.push(`/studydetail/${study.study_idx}`)}\r\n              >\r\n                <Title size=\"20\" weight=\"400\">\r\n                  {study.title}\r\n                </Title>\r\n              </div>\r\n              <State color={statecolor}>\r\n                {study.activate === \"Y\" ? \"모집중\" : \"모집 완료\"}\r\n              </State>\r\n              <div style={{ width: \"158px\", marginLeft: \"71px\" }}>\r\n                <Title size=\"20\" weight=\"400\">\r\n                  {study.type === \"online\" ? \"온라인\" : \"오프라인\"}\r\n                </Title>\r\n              </div>\r\n              <div style={{ width: \"159px\" }}>\r\n                <Title size=\"20\" weight=\"400\">\r\n                  {study.avgMannerTemperature}°C\r\n                </Title>\r\n              </div>\r\n              <div style={{ width: \"164px\" }}>\r\n                <Title size=\"20\" weight=\"400\">\r\n                  {study.participant || 0}/{study.size}\r\n                </Title>\r\n              </div>\r\n              <img\r\n                alt=\"leader profile\"\r\n                src={require(\"../assets/circle.png\").default}\r\n                style={{ width: \"60px\", height: \"60px\", marginRight: \"24px\" }}\r\n              />\r\n              <div style={{ width: \"169px\" }}>\r\n                <Title size=\"20\" weight=\"400\">\r\n                  {study.leader}\r\n                </Title>\r\n              </div>\r\n              <Title size=\"20\" weight=\"400\" width=\"200\">\r\n                {study.tags === null ? \"\" : study.tags.substr(0, 18)}\r\n              </Title>\r\n            </Study>\r\n          );\r\n        })}\r\n      </List>\r\n      <div\r\n        style={{\r\n          width: \"1520px\",\r\n          marginTop: \"29px\",\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Title size=\"20\" weight=\"400\" color=\"#56BE9C\">\r\n          조건에 맞는 스터디를 찾지 못하셨나요?\r\n        </Title>\r\n        <button\r\n          style={{\r\n            width: \"342px\",\r\n            height: \"70px\",\r\n            background: \"#56Be9c\",\r\n            border: \"none\",\r\n            borderRadius: \"10px\",\r\n            fontSize: \"24px\",\r\n            color: \"#ffffff\",\r\n            fontWeight: \"700\",\r\n            fontFamily: \"NotoSans\",\r\n            marginLeft: \"12px\",\r\n          }}\r\n          onClick={() => {\r\n            history.push(\"/makestudy\");\r\n          }}\r\n        >\r\n          스터디 개설하기\r\n        </button>\r\n      </div>\r\n    </Fix>\r\n  );\r\n};\r\n\r\nexport default StudyList;\r\n","D:\\SwitMe\\FrontEnd\\src\\components\\Modal.js",["168","169"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Screen = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 180px;\r\n  height: 70px;\r\n  background: var(--middle);\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n  margin-top: 40px;\r\n  color: white;\r\n  font-size: 24px;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 50px 110px;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  background-color: white;\r\n  position: fixed;\r\n  font-size: 20px;\r\n\r\n  .title {\r\n    font-weight: bold;\r\n    color: var(--deep);\r\n    font-size: 32px;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n`;\r\n\r\nconst Modal = (props) => {\r\n  const { open, close, title, text, choice } = props;\r\n  return (\r\n    <Screen>\r\n      <Overlay> </Overlay>\r\n      <Wrapper>\r\n        <div className=\"title\">{title}</div>\r\n        <div>{text}</div>\r\n        <div>\r\n          <Button style={{ backgroundColor: \"#CCCCCC\" }}>뒤로가기</Button>\r\n          <Button>{choice}</Button>\r\n        </div>\r\n      </Wrapper>\r\n    </Screen>\r\n  );\r\n};\r\nexport default Modal;\r\n","D:\\SwitMe\\FrontEnd\\src\\pages\\FindPassword.js",["170"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input2 from \"../components/Input2\";\r\nimport Button from \"../components/Button\";\r\nimport logo from \"../assets/logo.png\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { find_password } from \"../_actions/actions\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 90vh;\r\n`;\r\n\r\nconst Items = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  height: 500px;\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 96%;\r\n  color: #064538;\r\n`;\r\n\r\nconst FindPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState({\r\n    realname: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const formSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    console.log(user);\r\n    dispatch(find_password(user)).then((response) => {\r\n      console.log(response);\r\n      if (response.response) {\r\n        console.log(\"비밀번호 찾기 성공\");\r\n        console.log(response.payload);\r\n        // window.localStorage.setItem(\"id\", response.payload);\r\n        // window.localStorage.setItem(\"isAuth\", \"true\");\r\n        // window.location.replace(\"/\");\r\n      } else {\r\n        console.log(response);\r\n        alert(\"비밀번호 찾기 오류\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <form onSubmit={formSubmit}>\r\n        <Items>\r\n          <img alt=\"로고\" src={logo} style={{ marginBottom: \"1rem\" }}></img>\r\n          <Input2\r\n            name=\"realname\"\r\n            placeholder=\"가입된 이름을 입력해주세요\"\r\n            width=\"29rem\"\r\n            value={user.id}\r\n            onChange={onInputChange}\r\n          />\r\n          <Input2\r\n            name=\"email\"\r\n            placeholder=\"가입된 이메일 주소를 입력해주세요\"\r\n            width=\"29rem\"\r\n            // value={user.useremail}\r\n            onChange={onInputChange}\r\n          />\r\n          <TextBox>\r\n            <div>가입된 이메일 주소로 확인 메일이 발송됩니다.</div>\r\n          </TextBox>\r\n          <Button name=\"비밀번호 찾기\" width=\"29rem\" color=\"#56BE9C\"></Button>\r\n        </Items>\r\n      </form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default FindPassword;\r\n","D:\\SwitMe\\FrontEnd\\src\\_actions\\actions.js",[],"D:\\SwitMe\\FrontEnd\\src\\components\\Image.js",[],"D:\\SwitMe\\FrontEnd\\src\\components\\Header.js",["171","172","173"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../assets/logo.png\";\r\nimport profile from \"../assets/profile.png\";\r\nimport message from \"../assets/message.png\";\r\nimport dot from \"../assets/search.png\";\r\nimport Chat_list from \"./Chat_list\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 95px;\r\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);\r\n\r\n  .menu {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  height: 37.5px;\r\n  width: 150px;\r\n  margin-right: 70px;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  width: 173px;\r\n  height: 95px;\r\n  text-align: center;\r\n  padding: 30px;\r\n  font-size: 24px;\r\n  color: #cccccc;\r\n\r\n  :hover {\r\n    border-bottom: 5px solid;\r\n    border-color: var(--middle);\r\n    color: var(--deep);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Active = styled.div`\r\n  width: 173px;\r\n  height: 95px;\r\n  text-align: center;\r\n  padding: 30px;\r\n  font-size: 24px;\r\n  border-bottom: 5px solid;\r\n  border-color: var(--middle);\r\n  color: var(--deep);\r\n`;\r\n\r\nconst Search = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border: 1px solid var(--middle);\r\n  box-sizing: border-box;\r\n  padding-left: 30px;\r\n  margin-left: 80px;\r\n  border-radius: 10px;\r\n  width: 480px;\r\n  height: 65px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 409px;\r\n  height: auto;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nconst Button = styled.img`\r\n  width: 65px;\r\n  height: 65px;\r\n`;\r\n\r\nfunction Header({ page }) {\r\n  const history = useHistory();\r\n  // useState를 사용하여 open상태를 변경한다. (open일때 true로 만들어 열리는 방식)\r\n  //Chat_list\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [modalOpen2, setModalOpen2] = useState([]);\r\n  const [rerender, setRerender] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem(\"isAuth\") === null) {\r\n      window.localStorage.setItem(\"isAuth\", \"false\");\r\n    }\r\n  }, [modalOpen, rerender]);\r\n\r\n  const openModal = () => {\r\n    setModalOpen(true);\r\n    if (window.localStorage.getItem(\"isAuth\") === \"false\") {\r\n      alert(\"로그인이 필요한 서비스입니다.\");\r\n      history.push(\"/login\");\r\n    } else setModalOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const openModal2 = (idx) => {\r\n    let arr = modalOpen2;\r\n    arr.splice(idx, 1, true);\r\n    setModalOpen2(arr);\r\n    setRerender(!rerender);\r\n  };\r\n  const closeModal2 = (idx) => {\r\n    let arr = modalOpen2;\r\n    arr.splice(idx, 1, false);\r\n\r\n    setModalOpen2(arr);\r\n    setRerender(!rerender);\r\n  };\r\n\r\n  //화면이동\r\n  const Main = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const StopWatch = () => {\r\n    history.push(\"/StopWatch\");\r\n    if (window.localStorage.getItem(\"isAuth\") === \"false\") {\r\n      alert(\"로그인이 필요한 서비스입니다.\");\r\n      history.push(\"/login\");\r\n    } else history.push(\"/StopWatch\");\r\n  };\r\n  const StudyList = () => {\r\n    history.push(\"/StudyList\");\r\n    if (window.localStorage.getItem(\"isAuth\") === \"false\") {\r\n      alert(\"로그인이 필요한 서비스입니다.\");\r\n      history.push(\"/login\");\r\n    } else history.push(\"/StudyList\");\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Logo\r\n        src={logo}\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => history.push(\"/\")}\r\n      ></Logo>\r\n\r\n      {page === \"0\" ? (\r\n        <div class=\"menu\">\r\n          <Active>홈</Active>\r\n          <Menu onClick={StopWatch}>스톱워치</Menu>\r\n          <Menu onClick={StudyList}>스터디</Menu>\r\n        </div>\r\n      ) : null}\r\n\r\n      {page === \"1\" ? (\r\n        <div class=\"menu\">\r\n          <Menu onClick={Main}>홈</Menu>\r\n          <Active>스톱워치</Active>\r\n          <Menu onClick={StudyList}>스터디</Menu>\r\n        </div>\r\n      ) : null}\r\n\r\n      {page === \"2\" ? (\r\n        <div class=\"menu\">\r\n          <Menu onClick={Main}>홈</Menu>\r\n          <Menu onClick={StopWatch}>스톱워치</Menu>\r\n          <Active>스터디</Active>\r\n        </div>\r\n      ) : null}\r\n\r\n      {page === \"3\" ? (\r\n        <div class=\"menu\">\r\n          <Menu onClick={Main}>홈</Menu>\r\n          <Menu onClick={StopWatch}>스톱워치</Menu>\r\n          <Menu onClick={StudyList}>스터디</Menu>\r\n        </div>\r\n      ) : null}\r\n\r\n      <Search>\r\n        <Input type=\"text\" placeholder=\"새로운 스터디를 찾아보세요\"></Input>\r\n        <img src={dot} style={{ width: \"16px\", height: \"16px\" }}></img>\r\n      </Search>\r\n      <Button\r\n        onClick={openModal}\r\n        src={message}\r\n        style={{ marginLeft: \"61px\" }}\r\n      ></Button>\r\n      {/* Chat_list 시작 */}\r\n      <React.Fragment>\r\n        {modalOpen ? (\r\n          <Chat_list\r\n            setinitial={setModalOpen2}\r\n            open={modalOpen}\r\n            close={closeModal}\r\n            openstate2={modalOpen2}\r\n            open2={openModal2}\r\n            close2={closeModal2}\r\n            header=\"\"\r\n          >\r\n            {/* // Chat_list.js <main> {props.children} </main>에 내용이 입력됨. */}\r\n          </Chat_list>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </React.Fragment>\r\n      {/* Chat_list 끝*/}\r\n      <Button\r\n        onClick={\r\n          window.localStorage.getItem(\"isAuth\") === \"false\"\r\n            ? () => history.push(\"/login\")\r\n            : () => history.push(\"/mypage\")\r\n        }\r\n        src={profile}\r\n        style={{ marginLeft: \"29px\" }}\r\n      ></Button>\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Header;\r\n","D:\\SwitMe\\FrontEnd\\src\\components\\Input2.js",["174"],"import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InputBox = styled.input`\r\n  border: 1px solid #56be9c;\r\n  height: 2.5rem;\r\n  border-radius: 6px;\r\n  outline: none;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nconst Input2 = ({ name, placeholder, width, ...rest }) => {\r\n  return (\r\n    <InputBox\r\n      type=\"text\"\r\n      style={{ width: width }}\r\n      placeholder={placeholder}\r\n      name={name}\r\n      {...rest}\r\n    ></InputBox>\r\n  );\r\n};\r\n\r\nexport default Input2;\r\n","D:\\SwitMe\\FrontEnd\\src\\components\\Title.js",[],"D:\\SwitMe\\FrontEnd\\src\\components\\Button.js",["175"],"import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonBox = styled.button`\r\n  color: white;\r\n  font-weight: 700;\r\n  font-size: 1rem;\r\n  height: 2.5rem;\r\n  border-radius: 6px;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Button = ({ name, width, height, color, borderRadius, ...rest }) => {\r\n  return (\r\n    <div>\r\n      <ButtonBox\r\n        style={{\r\n          width: width,\r\n          height: height,\r\n          backgroundColor: color,\r\n          borderRadius: borderRadius,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {name}\r\n      </ButtonBox>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","D:\\SwitMe\\FrontEnd\\src\\components\\Watch.js",["176","177","178","179","180","181","182"],"import React, { useState, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { saveTimer } from \"../_actions/actions\";\r\n\r\nconst Num = styled.div`\r\n  font-size: 100px;\r\n  letter-spacing: 10px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: var(--middle);\r\n  border-radius: 10px;\r\n  margin-left: 40px;\r\n  color: white;\r\n  width: 1000px;\r\n  height: 788px;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .name {\r\n    font-size: 48px;\r\n    height: 70px;\r\n  }\r\n\r\n  .timer {\r\n    width: 662px;\r\n    height: 188px;\r\n    font-size: 130px;\r\n    text-align: center;\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 164px;\r\n  height: 65px;\r\n  border-radius: 40px;\r\n  background-color: var(--deep);\r\n  color: white;\r\n  font-size: 24px;\r\n  margin: 100px 40px;\r\n  font-weight: bold;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nfunction Watch(props) {\r\n  const { timer, save, isSave } = props;\r\n  const [time, setTime] = useState({ s: 0, m: 0, h: 0 });\r\n  const [interv, setInterv] = useState();\r\n  const [status, setStatus] = useState(0);\r\n  const start_time = useRef(\"\");\r\n  const end_time = useRef(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  //시작 status=0\r\n  const start = () => {\r\n    var today = new Date();\r\n    var year = today.getFullYear();\r\n    var month = (\"0\" + (today.getMonth() + 1)).slice(-2);\r\n    var day = (\"0\" + today.getDate()).slice(-2);\r\n    var hours = (\"0\" + today.getHours()).slice(-2);\r\n    var minutes = (\"0\" + today.getMinutes()).slice(-2);\r\n    var seconds = (\"0\" + today.getSeconds()).slice(-2);\r\n    start_time.current =\r\n      year +\r\n      \"-\" +\r\n      month +\r\n      \"-\" +\r\n      day +\r\n      \"T\" +\r\n      hours +\r\n      \":\" +\r\n      minutes +\r\n      \":\" +\r\n      seconds;\r\n    run();\r\n    var today = new Date();\r\n    var year = today.getFullYear();\r\n    var month = (\"0\" + (today.getMonth() + 1)).slice(-2);\r\n    var day = (\"0\" + today.getDate()).slice(-2);\r\n    var hours = (\"0\" + today.getHours()).slice(-2);\r\n    var minutes = (\"0\" + today.getMinutes()).slice(-2);\r\n    var seconds = (\"0\" + today.getSeconds()).slice(-2);\r\n    start_time.current =\r\n      year +\r\n      \"-\" +\r\n      month +\r\n      \"-\" +\r\n      day +\r\n      \"T\" +\r\n      hours +\r\n      \":\" +\r\n      minutes +\r\n      \":\" +\r\n      seconds;\r\n    setStatus(1);\r\n    setInterv(setInterval(run, 1000));\r\n  };\r\n\r\n  //작동 status=1\r\n  var updatedS = time.s,\r\n    updatedM = time.m,\r\n    updatedH = time.h;\r\n\r\n  const run = () => {\r\n    if (updatedM === 60) {\r\n      updatedH++;\r\n      updatedM = 0;\r\n    }\r\n    if (updatedS === 60) {\r\n      updatedM++;\r\n      updatedS = 0;\r\n    }\r\n    updatedS++;\r\n    return setTime({ s: updatedS, m: updatedM, h: updatedH });\r\n  };\r\n\r\n  const reset = () => {\r\n    var today = new Date();\r\n    var year = today.getFullYear();\r\n    var month = (\"0\" + (today.getMonth() + 1)).slice(-2);\r\n    var day = (\"0\" + today.getDate()).slice(-2);\r\n    var hours = (\"0\" + today.getHours()).slice(-2);\r\n    var minutes = (\"0\" + today.getMinutes()).slice(-2);\r\n    var seconds = (\"0\" + today.getSeconds()).slice(-2);\r\n    end_time.current =\r\n      year +\r\n      \"-\" +\r\n      month +\r\n      \"-\" +\r\n      day +\r\n      \"T\" +\r\n      hours +\r\n      \":\" +\r\n      minutes +\r\n      \":\" +\r\n      seconds;\r\n    const dataToSubmit = {\r\n      timer_idx: timer.timer_idx,\r\n      timer_duration: time.s + time.m * 60 + time.h * 360,\r\n      start_time: start_time.current,\r\n      end_time: end_time.current,\r\n    };\r\n    console.log(dataToSubmit);\r\n\r\n    dispatch(saveTimer(dataToSubmit)).then((response) => {\r\n      if (response.payload) {\r\n        isSave(!save);\r\n      } else {\r\n        console.log(\"스톱워치 저장 싪패\");\r\n      }\r\n    });\r\n    clearInterval(interv);\r\n    setStatus(0);\r\n    setTime({ s: 0, m: 0, h: 0 });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div style={{ height: \"150px\" }}></div>\r\n      <div className=\"timerName\">\r\n        <div style={{ fontSize: \"48px\" }}>{timer.name}</div>\r\n      </div>\r\n      <div\r\n        className=\"display\"\r\n        time={time}\r\n        style={{ display: \"flex\", flexDirection: \"row\" }}\r\n      >\r\n        <Num>{time.h >= 10 ? time.h : \"0\" + time.h}</Num>\r\n        <Num>:</Num>\r\n        <Num>{time.m >= 10 ? time.m : \"0\" + time.m}</Num>\r\n        <Num>:</Num>\r\n        <Num>{time.s >= 10 ? time.s : \"0\" + time.s}</Num>\r\n      </div>\r\n\r\n      <div className=\"buttons\">\r\n        {status === 0 ? (\r\n          timer.timer_idx ? (\r\n            <Button onClick={start}>시작하기</Button>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {status === 1 ? (\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            {/* <Button onClick={stop}>일시정지</Button>{\" \"} */}\r\n            <Button\r\n              style={{ backgroundColor: \"white\", color: \"var(--deep)\" }}\r\n              onClick={reset}\r\n            >\r\n              초기화\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {status === 2 ? (\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            {/* <Button onClick={resume}>재개하기</Button>{\" \"} */}\r\n            <Button\r\n              style={{ backgroundColor: \"white\", color: \"var(--deep)\" }}\r\n              onClick={reset}\r\n            >\r\n              정지\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Watch;\r\n","D:\\SwitMe\\FrontEnd\\src\\components\\TimerList.js",["183","184","185","186","187","188"],"import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TimerListContent from \"./TimerListContent\";\r\nimport { addStopwatch, getTimerList, deleteTimer } from \"../_actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 510px;\r\n  height: 780px;\r\n  border: 1px solid var(--middle);\r\n  box-sizing: border-box;\r\n  border-radius: 15px;\r\n  font-size: 24px;\r\n\r\n  .head {\r\n    font-weight: bold;\r\n    height: 84px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-top-left-radius: 15px;\r\n    border-top-right-radius: 15px;\r\n    background-color: var(--middle);\r\n    color: white;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: fixed;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 164px;\r\n  height: 40px;\r\n  border-radius: 20px;\r\n  background-color: var(--deep);\r\n  color: white;\r\n  font-size: 24px;\r\n  font-size: 20px;\r\n  outline: none;\r\n  border: none;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst AddTimer = styled.input`\r\n  padding: 31px;\r\n  font-size: 20px;\r\n  height: 67px;\r\n  width: 100%;\r\n  outline: none;\r\n  border: none;\r\n  border-bottom: 1px solid var(--middle);\r\n`;\r\n\r\nfunction TimerList({ openModal, changeTimer, change }) {\r\n  //타이머 목록\r\n  const [status, setStatus] = useState(0);\r\n  const [toggle, setToggle] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [timers, setTimers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTimerList(window.localStorage.getItem(\"id\"))).then(\r\n      (response) => {\r\n        if (response.payload) {\r\n          const tmp_arr = [];\r\n          response.payload?.map((timer) => {\r\n            const stopwatch = {\r\n              timer_idx: timer.timer_idx,\r\n              name: timer.name,\r\n              duration: 0,\r\n            };\r\n            const time = timer.duration;\r\n            const second =\r\n              time % 60 < 10\r\n                ? \"0\" + Math.floor(time % 60)\r\n                : Math.floor(time % 60);\r\n            const minute =\r\n              Math.floor(time / 60) < 10\r\n                ? \"0\" + Math.floor(time / 60)\r\n                : Math.floor(time / 60);\r\n            const hour = Math.floor(time / 360);\r\n            stopwatch[\"duration\"] =\r\n              hour.toString() +\r\n              \" : \" +\r\n              minute.toString() +\r\n              \" : \" +\r\n              second.toString();\r\n            tmp_arr.push(stopwatch);\r\n          });\r\n          setTimers(tmp_arr);\r\n          if (tmp_arr.length > 0) changeTimer(tmp_arr[0]);\r\n        } else {\r\n          console.log(\"스톱워치 리스트 에러\");\r\n        }\r\n      }\r\n    );\r\n  }, [toggle, change]);\r\n\r\n  //추가하기 status:1\r\n  const Add = () => {\r\n    setStatus(1);\r\n  };\r\n\r\n  //input\r\n  const [value, setValue] = useState(\"\");\r\n  const onInputChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n    console.log(value);\r\n  }, []);\r\n\r\n  const nextId = useRef(2);\r\n\r\n  const onInsert = useCallback(\r\n    (value) => {\r\n      const timer = {\r\n        id: nextId.current,\r\n        name: value,\r\n        time: \"00\",\r\n      };\r\n      setTimers(timers.concat(timer));\r\n      nextId.current += 1;\r\n    },\r\n    [timers]\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      dispatch(\r\n        addStopwatch(window.localStorage.getItem(\"id\"), { timer_name: value })\r\n      ).then((response) => {\r\n        if (response.payload) {\r\n          console.log(response.payload);\r\n          setToggle(!toggle);\r\n        } else {\r\n          console.log(\"스톱워치 추가 에러\");\r\n        }\r\n      });\r\n      setValue(\"\");\r\n      e.preventDefault();\r\n      setStatus(0);\r\n    },\r\n    [value]\r\n  );\r\n\r\n  //삭제\r\n  const onRemove = useCallback(\r\n    (id) => {\r\n      dispatch(deleteTimer(id)).then((response) => {\r\n        if (response.type) {\r\n          console.log(response.payload);\r\n          setToggle(!toggle);\r\n        } else {\r\n          console.log(\"스톱워치 삭제 에러\");\r\n        }\r\n      });\r\n    },\r\n    [timers]\r\n  );\r\n\r\n  //수정\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div class=\"head\">2021.07.18. 일요일</div>\r\n\r\n      <div>\r\n        {timers?.map((timer) => (\r\n          <TimerListContent\r\n            timer={timer}\r\n            key={timer.id}\r\n            onRemove={onRemove}\r\n            openModal={openModal}\r\n            toggle={toggle}\r\n            setToggle={setToggle}\r\n            changeTimer={changeTimer}\r\n          ></TimerListContent>\r\n        ))}\r\n      </div>\r\n\r\n      {status === 1 ? (\r\n        <AddTimer\r\n          type=\"text\"\r\n          placeholder=\"타이머명을 입력하세요\"\r\n          value={value}\r\n          onChange={onInputChange}\r\n        ></AddTimer>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {status === 0 ? <Button onClick={Add}>+ 추가하기</Button> : \"\"}\r\n        {status === 1 ? <Button onClick={onSubmit}>+ 추가하기</Button> : \"\"}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default TimerList;\r\n","D:\\SwitMe\\FrontEnd\\src\\components\\Input.js",[],"D:\\SwitMe\\FrontEnd\\src\\components\\TimerListContent.js",[],"D:\\SwitMe\\FrontEnd\\src\\components\\ModalTimer.js",["189","190"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport x from \"../assets/close.png\";\r\n\r\nconst Screen = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 180px;\r\n  height: 70px;\r\n  background: var(--middle);\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n  color: white;\r\n  font-size: 24px;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 609px;\r\n  height: 299px;\r\n  padding: 15px;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  background-color: white;\r\n  position: fixed;\r\n  font-size: 20px;\r\n  .header {\r\n    display: fixed;\r\n    justify-content: flex-end;\r\n  }\r\n  .img {\r\n    width: 14.5px;\r\n    height: 14.5px;\r\n  }\r\n  .content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: flex;\r\n  align-items: center;\r\n  border: 1px solid var(--middle);\r\n  box-sizing: border-box;\r\n  padding-left: 30px;\r\n  margin-left: 80px;\r\n  border-radius: 10px;\r\n  width: 480px;\r\n  height: 65px;\r\n  outline: none;\r\n  margin: 20px;\r\n`;\r\n\r\nconst Modal = (props) => {\r\n  const { open, close, value, onInputChange, onSubmit } = props;\r\n  return (\r\n    <div className={open ? \"openModal modal\" : \"modal\"}>\r\n      {open ? (\r\n        <Screen>\r\n          <Overlay> </Overlay>\r\n          <Wrapper>\r\n            <div class=\"header\">\r\n              <img src={x} onClick={close}></img>\r\n            </div>\r\n            <div class=\"content\">\r\n              <div style={{ fontWeight: \"bold\" }}>타이머명 변경하기</div>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"타이머명을 입력하세요\"\r\n                value={value}\r\n                onChange={onInputChange}\r\n              ></Input>\r\n              <Button onClick={onSubmit}>변경하기</Button>\r\n            </div>\r\n          </Wrapper>\r\n        </Screen>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;\r\n","D:\\SwitMe\\FrontEnd\\src\\config.js",[],"D:\\SwitMe\\FrontEnd\\src\\components\\Chat_list.js",["191","192"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"../assets/chat.css\";\r\nimport logo from \"../assets/logo.png\";\r\nimport Title from \"../components/Title\";\r\nimport Chat from \"./Chat\";\r\nimport { getChatlist } from \"../_actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Col = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Study = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  /* background-color: #56be9c; */\r\n  border-bottom: #56be9c solid 1px;\r\n  height: 108px;\r\n  :hover {\r\n    background-color: #56be9c;\r\n  }\r\n`;\r\n\r\nconst Chat_list = (props) => {\r\n  // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\r\n  const { setinitial, open, close, openstate2, open2, close2, header } = props;\r\n  const dispatch = useDispatch();\r\n  const user_id = window.localStorage.getItem(\"id\");\r\n\r\n  const [studies, setStudies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getChatlist(user_id)).then((response) => {\r\n      if (response.payload) {\r\n        console.log(response);\r\n        setStudies(response.payload);\r\n        let arr = new Array(response.payload.length);\r\n        arr.fill(false);\r\n        setinitial(arr);\r\n      } else {\r\n        console.log(\"채팅 목록 불러오기 에러\");\r\n      }\r\n    });\r\n    let arr = new Array(5);\r\n    arr.fill(false);\r\n    setinitial(arr);\r\n  }, [open]);\r\n\r\n  return (\r\n    // 모달이 열릴때 openModal 클래스가 생성된다.\r\n    <div className={open ? \"openModal modal\" : \"modal\"}>\r\n      {open ? (\r\n        <section>\r\n          <header\r\n            style={{\r\n              height: \"95px\",\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              boxShadow: \"0px 5px 15px grey\",\r\n            }}\r\n          >\r\n            <div>\r\n              <img src={logo} style={{ width: \"136px\" }} />\r\n            </div>\r\n            {header}\r\n            <button className=\"close\" onClick={close}>\r\n              {\" \"}\r\n              &times;{\" \"}\r\n            </button>\r\n          </header>\r\n          <main>\r\n            {props.children}\r\n            <List>\r\n              {studies?.map((study, i) => {\r\n                return (\r\n                  <Study\r\n                    key={i}\r\n                    onClick={!openstate2[i] ? () => open2(i) : () => {}}\r\n                  >\r\n                    <React.Fragment>\r\n                      {openstate2[i] ? (\r\n                        <Chat\r\n                          open={openstate2[i]}\r\n                          close={() => close2(i)}\r\n                          header=\"\"\r\n                          other_user={study.other_user}\r\n                          room_idx={study.room_idx}\r\n                        ></Chat>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </React.Fragment>\r\n                    <img\r\n                      alt=\"study profile\"\r\n                      src={require(\"../assets/circle.png\").default}\r\n                      style={{ marginLeft: \"30px\" }}\r\n                    />\r\n                    <Col>\r\n                      <div style={{ width: \"300px\" }}>\r\n                        <Title size=\"20\" weight=\"400\">\r\n                          {study.other_user}\r\n                        </Title>\r\n                      </div>\r\n                      <div>{study.message}</div>\r\n                    </Col>\r\n                    <div>\r\n                      <img\r\n                        alt=\"unread\"\r\n                        src={require(\"../assets/circle2.png\").default}\r\n                        style={{ marginRight: \"35px\" }}\r\n                      />\r\n                    </div>\r\n                  </Study>\r\n                );\r\n              })}\r\n            </List>\r\n          </main>\r\n\r\n          <footer>\r\n            <div style={{ height: \"67px\" }}></div>\r\n            {/* <button className=\"close\" onClick={close}>\r\n              {\" \"}\r\n              close{\" \"}\r\n            </button> */}\r\n          </footer>\r\n        </section>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat_list;\r\n","D:\\SwitMe\\FrontEnd\\src\\components\\Chat.js",["193","194"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"../assets/chat.css\";\r\nimport Title from \"./Title\";\r\nimport Input from \"./Input\";\r\nimport { getMessages } from \"../_actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SockJS from \"sockjs-client\";\r\nimport * as StompJs from \"@stomp/stompjs\";\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 660px;\r\n  background-color: #56be9c;\r\n  padding: 30px;\r\n`;\r\nconst Row = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: ${(props) => props.location || \"left\"};\r\n  align-items: center;\r\n`;\r\nconst Bubble = styled.div`\r\n  background-color: #ffffff;\r\n  border-radius: 10px;\r\n  font-family: \"NotoSans\";\r\n  font-size: 14px;\r\n  text-align: start;\r\n  padding: 10px;\r\n  max-width: 300px;\r\n  margin-bottom: 10px;\r\n  margin-left: 100px;\r\n  margin-right: 15px;\r\n  z-index: 5;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst Chat = (props) => {\r\n  // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\r\n  const { open, close, header, other_user, other_user_name, room_idx } = props;\r\n  const myid = window.localStorage.getItem(\"id\");\r\n  const myname = \"나\";\r\n  const last = useRef(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const client = useRef({});\r\n\r\n  useEffect(() => {\r\n    dispatch(getMessages(room_idx)).then((response) => {\r\n      if (response.payload) {\r\n        console.log(response);\r\n        setMessages(response.payload);\r\n      } else {\r\n        console.log(\"메세지 목록 가져오기 에러\");\r\n      }\r\n    });\r\n    client.current = new StompJs.Client({\r\n      //brokerURL: \"ws://localhost:8080/sock\",\r\n      webSocketFactory: () => new SockJS(\"/sock\"),\r\n      debug: function (str) {\r\n        console.log(str);\r\n      },\r\n      reconnectDelay: 5000,\r\n      heartbeatIncoming: 4000,\r\n      heartbeatOutgoing: 4000,\r\n    });\r\n\r\n    const callback = (message) => {\r\n      if (message.body) {\r\n        dispatch(getMessages(room_idx)).then((response) => {\r\n          if (response.payload) {\r\n            setMessages(response.payload);\r\n            last.current = \"\";\r\n          } else {\r\n            console.log(\"메세지 목록 가져오기 에러\");\r\n          }\r\n        });\r\n      } else {\r\n        alert(\"got empty message\");\r\n      }\r\n    };\r\n\r\n    client.current.onConnect = function (frame) {\r\n      client.current.subscribe(`/topic/${room_idx}`, callback);\r\n    };\r\n    client.current.onStompError = function (frame) {\r\n      console.log(\"Broker reported error: \" + frame.headers[\"message\"]);\r\n      console.log(\"Additional details: \" + frame.body);\r\n    };\r\n\r\n    client.current.activate();\r\n    last.current = \"\";\r\n  }, []);\r\n\r\n  const onInputChange = (e) => {\r\n    setMessage(e.target.value);\r\n    last.current = \"\";\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    client.current.publish({\r\n      destination: \"/pub/chat/message\",\r\n      body: JSON.stringify({\r\n        room_idx: room_idx,\r\n        user_idx: myid,\r\n        user_name: myname,\r\n        message: message,\r\n      }),\r\n    });\r\n    setMessage(\"\");\r\n    dispatch(getMessages(room_idx)).then((response) => {\r\n      if (response.payload) {\r\n        console.log(response);\r\n        setMessages(response.payload);\r\n      } else {\r\n        console.log(\"메세지 목록 가져오기 에러\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const disconnect = () => {\r\n    client.current.publish({\r\n      destination: \"/pub/disconnect\",\r\n      body: JSON.stringify({\r\n        room_idx: room_idx,\r\n        user_idx: myid,\r\n      }),\r\n    });\r\n    close();\r\n  };\r\n\r\n  return (\r\n    // 모달이 열릴때 openModal 클래스가 생성된다.\r\n    <div\r\n      className={open ? \"openModal modal\" : \"modal\"}\r\n      style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}\r\n    >\r\n      {open ? (\r\n        <section>\r\n          <header\r\n            style={{\r\n              height: \"95px\",\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              boxShadow: \"0px 5px 15px grey\",\r\n            }}\r\n          >\r\n            <div>\r\n              <Title>{other_user_name}</Title>\r\n            </div>\r\n            {header}\r\n            <button className=\"close\" onClick={disconnect}>\r\n              {\" \"}\r\n              &times;{\" \"}\r\n            </button>\r\n          </header>\r\n          <Content>\r\n            {messages?.map((message, i) => {\r\n              if (\r\n                last.current !== message.sender_idx &&\r\n                message.sender_idx !== myid\r\n              ) {\r\n                last.current = message.sender_idx;\r\n                return (\r\n                  <Row>\r\n                    <img\r\n                      alt=\"profile\"\r\n                      src={message.self_image}\r\n                      style={{\r\n                        width: \"70px\",\r\n                        height: \"70px\",\r\n                        marginRight: \"10px\",\r\n                        position: \"absolute\",\r\n                        borderRadius: \"50%\",\r\n                      }}\r\n                    />\r\n                    <img\r\n                      alt=\"left\"\r\n                      src={require(\"../assets/left.png\").default}\r\n                      style={{\r\n                        width: \"28px\",\r\n                        height: \"17px\",\r\n                        marginRight: \"-112px\",\r\n                        marginLeft: \"85px\",\r\n                      }}\r\n                    />\r\n                    <Bubble>{message.message}</Bubble>\r\n                  </Row>\r\n                );\r\n              } else if (message.sender_idx !== myid) {\r\n                return (\r\n                  <Row>\r\n                    <Bubble marginLeft=\"100\">{message.message}</Bubble>\r\n                  </Row>\r\n                );\r\n              } else if (last.current !== myid && message.sender_idx === myid) {\r\n                last.current = myid;\r\n                return (\r\n                  <Row location=\"flex-end\">\r\n                    <Bubble>{message.message}</Bubble>\r\n                    <img\r\n                      alt=\"right\"\r\n                      src={require(\"../assets/right.png\").default}\r\n                      style={{\r\n                        width: \"28px\",\r\n                        height: \"17px\",\r\n                        marginLeft: \"-27px\",\r\n                      }}\r\n                    />\r\n                  </Row>\r\n                );\r\n              } else {\r\n                return (\r\n                  <Row location=\"flex-end\">\r\n                    <Bubble>{message.message}</Bubble>\r\n                  </Row>\r\n                );\r\n              }\r\n            })}\r\n          </Content>\r\n\r\n          <footer>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                height: \"67px\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-around\",\r\n              }}\r\n            >\r\n              <Input\r\n                width=\"382\"\r\n                validinput=\"true\"\r\n                placeholder=\"내용을 입력하세요\"\r\n                inputwidth=\"350\"\r\n                value={message}\r\n                onChange={onInputChange}\r\n              ></Input>\r\n              <img\r\n                alt=\"send\"\r\n                src={require(\"../assets/paperplane.png\").default}\r\n                style={{ width: \"31px\", height: \"34px\", cursor: \"pointer\" }}\r\n                onClick={sendMessage}\r\n              />\r\n            </div>\r\n          </footer>\r\n        </section>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","D:\\SwitMe\\FrontEnd\\src\\pages\\EditStudy.js",["195","196"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../assets/logo.png\";\r\nimport Header from \"../components/Header\";\r\nimport Input from \"../components/Input\";\r\nimport Title from \"../components/Title\";\r\nimport Button from \"../components/Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editstudy, getStudydetail } from \"../_actions/actions\";\r\n\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n// import DatePicker from \"react-datepicker\";\r\n// import \"../pages/datePicker.css\";\r\n// import Calendar from \"../components/Calendar\";\r\n\r\n// //antd datePicker\r\n// import { DatePicker } from \"antd\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* height: 90vh; */\r\n`;\r\n\r\nconst Col = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Textbox = styled.div`\r\n  width: 11rem;\r\n`;\r\n\r\nconst Inputbox = styled.div`\r\n  width: 1000px;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  ul {\r\n    width: 140px;\r\n    display: none;\r\n    padding-left: 0px;\r\n    border: 1px solid #56be9c;\r\n    border-radius: 10px;\r\n    z-index: 1;\r\n    position: absolute;\r\n    margin-top: 65px;\r\n    overflow-y: scroll;\r\n    height: 200px;\r\n  }\r\n  li {\r\n    padding: 5px 10px;\r\n    list-style: none;\r\n    display: none;\r\n    border-radius: 10px;\r\n    :hover {\r\n      border: 1px solid #56be9c;\r\n    }\r\n  }\r\n  :hover {\r\n    ul,\r\n    li {\r\n      display: block;\r\n      cursor: pointer;\r\n      background-color: white;\r\n      z-index: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RadioButton = styled.input`\r\n  border: 1px solid #56be9c;\r\n  width: 41px;\r\n  height: 41px;\r\n`;\r\n\r\nconst EditStudy = ({ match }) => {\r\n  const { study_id } = match.params;\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [isSet, setIsSet] = useState();\r\n  const [study, setStudy] = useState({\r\n    activate: \"\",\r\n    extra: null,\r\n    image: \"\",\r\n    leader: \"\",\r\n    link: \"\",\r\n    location: \"\",\r\n    size: \"\",\r\n    tags: \"\",\r\n    termend: \"\",\r\n    termstart: \"\",\r\n    timeend: \"\",\r\n    timestart: \"\",\r\n    title: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getStudydetail(study_id)).then((response) => {\r\n      console.log(study);\r\n      if (response.payload) {\r\n        setStudy({\r\n          activate: response.payload.activate,\r\n          extra: response.payload.extra,\r\n          image: response.payload.image,\r\n          leader: response.payload.leader,\r\n          link: response.payload.link,\r\n          location: response.payload.location,\r\n          size: response.payload.size,\r\n          tags: response.payload.tags,\r\n          termend: response.payload.termend,\r\n          termstart: response.payload.termstart,\r\n          timeend: response.payload.timeend,\r\n          timestart: response.payload.timestart,\r\n          title: response.payload.title,\r\n          type: response.payload.type,\r\n        });\r\n        setIsSet(true);\r\n      } else {\r\n        console.log(\"기존 스터디 정보 가져오기 실패\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onFormSubmit = () => {\r\n    console.log(study);\r\n    dispatch(editstudy(study_id, study)).then((response) => {\r\n      if (response.payload) {\r\n        alert(\"스터디가 수정되었습니다..\");\r\n        history.push(`/`);\r\n      } else {\r\n        console.log(\"스터디 수정 실패\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setStudy({ ...study, [name]: value });\r\n  };\r\n\r\n  return isSet ? (\r\n    <Wrapper>\r\n      <Header page=\"3\" />\r\n      <Row style={{ marginTop: \"40px\" }}>\r\n        <Col>\r\n          <div style={{ marginLeft: \"10px\" }}>\r\n            <Title>스터디 수정하기</Title>\r\n          </div>\r\n          <img\r\n            alt=\"study profile\"\r\n            src={require(\"../assets/rectangle.png\").default}\r\n            // src={study.image}\r\n            style={{\r\n              width: \"220px\",\r\n              height: \"220px\",\r\n              marginTop: \"20px\",\r\n              marginBottom: \"20px\",\r\n            }}\r\n          />\r\n          <input\r\n            style={{ display: \"none\" }}\r\n            id=\"imgfile\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n          />\r\n          <label for=\"imgfile\">\r\n            <div\r\n              style={{\r\n                fontSize: \"20px\",\r\n                backgroundColor: \"#56BE9C\",\r\n                borderRadius: \"10px\",\r\n                height: \"70px\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              이미지추가하기\r\n            </div>\r\n          </label>\r\n        </Col>\r\n\r\n        <Col style={{ marginLeft: \"40px\" }}>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <Textbox>\r\n              <Title>스터디 이름</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Input\r\n                name=\"title\"\r\n                value={study.title}\r\n                placeholder=\"스터디의 이름을 작성해주세요\"\r\n                width=\"1000\"\r\n                inputwidth=\"950\"\r\n                marginTop=\"18\"\r\n                validinput=\"true\"\r\n                onChange={onInputChange}\r\n              ></Input>\r\n            </Inputbox>\r\n          </Row>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <Textbox>\r\n              <Title>진행 방식</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Row style={{ paddingTop: \"18px\" }}>\r\n                <Col>\r\n                  <RadioButton\r\n                    type=\"radio\"\r\n                    id=\"online\"\r\n                    name=\"onoff\"\r\n                    onClick={() => setStudy({ ...study, type: \"online\" })}\r\n                  ></RadioButton>\r\n                </Col>\r\n                <Col\r\n                  style={{\r\n                    padding: \"6px\",\r\n                    paddingLeft: \"20px\",\r\n                    fontSize: \"20px\",\r\n                    marginRight: \"45px\",\r\n                  }}\r\n                >\r\n                  <label id=\"online\">온라인</label>\r\n                </Col>\r\n                <Col>\r\n                  <RadioButton\r\n                    type=\"radio\"\r\n                    id=\"offline\"\r\n                    name=\"onoff\"\r\n                    onClick={() => setStudy({ ...study, type: \"offline\" })}\r\n                  ></RadioButton>\r\n                </Col>\r\n                <Col\r\n                  style={{\r\n                    padding: \"6px\",\r\n                    paddingLeft: \"20px\",\r\n                    fontSize: \"20px\",\r\n                    marginRight: \"45px\",\r\n                  }}\r\n                >\r\n                  <label id=\"offline\">오프라인</label>\r\n                </Col>\r\n              </Row>\r\n            </Inputbox>\r\n          </Row>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <Textbox>\r\n              <Title>기간</Title>\r\n            </Textbox>\r\n            <Inputbox style={{ paddingTop: \"18px\" }}>\r\n              <Input\r\n                name=\"termstart\"\r\n                value={study.termstart}\r\n                placeholder=\"날짜를 선택하세요\"\r\n                width=\"300\"\r\n                inputwidth=\"160\"\r\n                marginTop=\"18\"\r\n                validinput=\"true\"\r\n                onChange={onInputChange}\r\n              />\r\n              {/* <Calendar /> */}\r\n\r\n              <div style={{ margin: \"15px\", marginTop: \"30px\" }}>\r\n                <img\r\n                  alt=\"line\"\r\n                  src={require(\"../assets/line.png\").default}\r\n                  style={{ width: \"57px\", height: \"3px\" }}\r\n                />\r\n              </div>\r\n              <Input\r\n                name=\"termend\"\r\n                value={study.termend}\r\n                placeholder=\"날짜를 선택하세요\"\r\n                width=\"300\"\r\n                inputwidth=\"160\"\r\n                marginTop=\"18\"\r\n                validinput=\"true\"\r\n                onChange={onInputChange}\r\n              />\r\n              {/* <Calendar /> */}\r\n            </Inputbox>\r\n          </Row>\r\n\r\n          {/*dropdown */}\r\n          <Row\r\n            style={{\r\n              alignItems: \"center\",\r\n              marginTop: \"18px\",\r\n              marginBottom: \"18px\",\r\n            }}\r\n          >\r\n            <Textbox>\r\n              <Title>시간</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Item>\r\n                <Input width=\"141\" height=\"65\">\r\n                  <Title size=\"20\" weight=\"400\">\r\n                    {study.timestart.slice(0, 5)}\r\n                  </Title>\r\n                  <img\r\n                    alt=\"dropdown\"\r\n                    src={require(\"../assets/dropdown.png\").default}\r\n                    style={{ marginLeft: \"21px\" }}\r\n                  />\r\n                </Input>\r\n                <ul>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"00:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      00:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"01:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      01:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"02:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      02:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"03:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      03:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"04:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      04:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"05:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      05:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"06:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      06:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"07:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      07:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"08:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      08:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"09:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      09:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"10:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      10:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"11:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      11:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"12:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      12:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"13:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      13:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"14:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      14:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"15:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      15:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"16:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      16:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"17:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      17:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"18:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      18:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"19:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      19:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"20:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      20:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"21:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      21:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"22:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      22:00\r\n                    </Title>\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setStudy({ ...study, timestart: \"23:00\" })}\r\n                  >\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      23:00\r\n                    </Title>\r\n                  </li>\r\n                </ul>\r\n              </Item>\r\n              <div style={{ margin: \"15px\" }}>\r\n                <img\r\n                  alt=\"line\"\r\n                  src={require(\"../assets/line.png\").default}\r\n                  style={{ width: \"57px\", height: \"3px\" }}\r\n                />\r\n              </div>\r\n              <Item>\r\n                <Input width=\"141\" height=\"65\">\r\n                  <Title size=\"20\" weight=\"400\">\r\n                    {study.timeend.slice(0, 5)}\r\n                  </Title>\r\n                  <img\r\n                    alt=\"dropdown\"\r\n                    src={require(\"../assets/dropdown.png\").default}\r\n                    style={{ marginLeft: \"21px\" }}\r\n                  />\r\n                </Input>\r\n                <ul>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"00:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      00:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"01:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      01:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"02:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      02:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"03:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      03:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"04:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      04:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"05:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      05:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"06:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      06:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"07:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      07:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"08:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      08:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"09:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      09:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"10:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      10:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"11:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      11:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"12:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      12:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"13:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      13:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"14:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      14:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"15:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      15:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"16:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      16:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"17:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      17:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"18:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      18:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"19:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      19:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"20:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      20:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"21:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      21:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"22:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      22:00\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, timeend: \"23:00\" })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      23:00\r\n                    </Title>\r\n                  </li>\r\n                </ul>\r\n              </Item>\r\n            </Inputbox>\r\n          </Row>\r\n          <Row\r\n            style={{\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Textbox>\r\n              <Title>최대 모집 인원</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Item>\r\n                <Input width=\"141\" height=\"65\">\r\n                  <Title size=\"20\" weight=\"400\">\r\n                    {study.size}\r\n                  </Title>\r\n                  <img\r\n                    alt=\"dropdown\"\r\n                    src={require(\"../assets/dropdown.png\").default}\r\n                    style={{ marginLeft: \"21px\" }}\r\n                  />\r\n                </Input>\r\n                <ul>\r\n                  <li onClick={() => setStudy({ ...study, size: 0 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      0\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 1 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      1\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 2 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      2\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 3 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      3\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 4 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      4\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 5 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      5\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 6 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      6\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 7 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      7\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 8 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      8\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 9 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      9\r\n                    </Title>\r\n                  </li>\r\n                  <li onClick={() => setStudy({ ...study, size: 10 })}>\r\n                    <Title size=\"20\" weight=\"400\">\r\n                      10\r\n                    </Title>\r\n                  </li>\r\n                </ul>\r\n              </Item>\r\n            </Inputbox>\r\n          </Row>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <Textbox>\r\n              <Title>태그</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Input\r\n                name=\"tags\"\r\n                value={study.tags}\r\n                placeholder=\"태그를 입력하세요\"\r\n                width=\"1000\"\r\n                inputwidth=\"950\"\r\n                marginTop=\"18\"\r\n                validinput=\"true\"\r\n                onChange={onInputChange}\r\n              ></Input>\r\n            </Inputbox>\r\n          </Row>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            {study.type === \"online\" ? (\r\n              <>\r\n                <Textbox>\r\n                  <Title>링크</Title>\r\n                </Textbox>\r\n                <Inputbox>\r\n                  <Input\r\n                    name=\"link\"\r\n                    value={study.link}\r\n                    placeholder=\"사용하실 온라인 회의 링크를 입력하세요 (Zoom, Google Meet 등)\"\r\n                    width=\"1000\"\r\n                    inputwidth=\"950\"\r\n                    marginTop=\"18\"\r\n                    validinput=\"true\"\r\n                    onChange={onInputChange}\r\n                  ></Input>\r\n                </Inputbox>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Textbox>\r\n                  <Title>장소</Title>\r\n                </Textbox>\r\n                <Inputbox>\r\n                  <Input\r\n                    value={study.location}\r\n                    placeholder=\"장소찾기\"\r\n                    width=\"178\"\r\n                    inputwidth=\"110\"\r\n                    marginTop=\"18\"\r\n                    validinput=\"true\"\r\n                  >\r\n                    <img\r\n                      alt=\"dropdown\"\r\n                      src={require(\"../assets/vector.png\").default}\r\n                    />\r\n                  </Input>\r\n                </Inputbox>\r\n              </>\r\n            )}\r\n          </Row>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <Textbox>\r\n              <Title>기타 사항</Title>\r\n            </Textbox>\r\n            <Inputbox>\r\n              <Input\r\n                name=\"extra\"\r\n                value={study.extra}\r\n                placeholder=\"추가적인 사항을 기재해주세요 (조용한 정도, 타이핑/마우스 사용 여부 등)\"\r\n                width=\"1000\"\r\n                inputwidth=\"950\"\r\n                marginTop=\"18\"\r\n                validinput=\"true\"\r\n                onChange={onInputChange}\r\n              ></Input>\r\n            </Inputbox>\r\n          </Row>\r\n          <Row\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              marginTop: \"120px\",\r\n            }}\r\n          >\r\n            <Button\r\n              name=\"이전으로\"\r\n              width=\"180px\"\r\n              height=\"70px\"\r\n              color=\"#CCCCCC\"\r\n              onClick={() => history.push(\"/studylist\")}\r\n            ></Button>\r\n            <Button\r\n              name=\"스터디 수정하기\"\r\n              width=\"220px\"\r\n              height=\"70px\"\r\n              color=\"#56BE9C\"\r\n              onClick={onFormSubmit}\r\n            ></Button>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Wrapper>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default EditStudy;\r\n","D:\\SwitMe\\FrontEnd\\src\\pages\\EditUser.js",["197","198","199","200","201","202"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport Default from \"../assets/profile.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Edit from \"../assets/edit.png\";\r\nimport { getUserInfo, editUser } from \"../_actions/actions\";\r\nimport ImageUpload from \"../components/ImageUpload\";\r\nimport { checkPropTypes } from \"prop-types\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding-top: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: content;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  width: 198px;\r\n  height: 198px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n  background: url(${(props) => props.src});\r\n  background-size: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 480px;\r\n  height: 65px;\r\n  border-radius: 10px;\r\n  border: 1px solid var(--middle);\r\n  margin: 20px;\r\n  outline: none;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 480px;\r\n  height: 65px;\r\n  border-radius: 10px;\r\n  border: 1px solid #cccccc;\r\n  margin: 20px;\r\n  outline: none;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 228px;\r\n  height: 70px;\r\n  background: var(--middle);\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n  margin-top: 40px;\r\n  color: white;\r\n  font-size: 24px;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst EditUser = ({ match }) => {\r\n  const { user_idx } = match.params;\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState({\r\n    user_idx: \"\",\r\n    user_name: \"김선달\",\r\n    user_email: \"whkakrkr@gmail.com\",\r\n    file: \"\",\r\n\r\n    profile: Default,\r\n    new_password: \"\",\r\n    check_new_password: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserInfo(user_idx)).then((response) => {\r\n      if (response.payload) {\r\n        setUser(response.payload);\r\n        // setIsSet(true);\r\n        console.log(user);\r\n      } else {\r\n        console.log(\"기존 유저 정보 가져오기 실패\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  //이미지업로드\r\n  const onInputChange = (e) => {\r\n    console.log(e.target.value);\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const submit = () => {\r\n    if (user.check_new_password !== user.new_password) {\r\n      alert(\"비밀번호 확인이 일치하지 않습니다\");\r\n    } else {\r\n      console.log(user.new_password);\r\n    }\r\n  };\r\n  // const history = useHistory();\r\n\r\n  const uploadImage = () => {\r\n    var input = document.createElement(\"input\");\r\n    input.type = \"file\";\r\n    input.accept = \"image/*\";\r\n\r\n    input.click();\r\n    input.onchange = function (e) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(e.target.files[0]);\r\n\r\n      reader.onload = function () {\r\n        console.log(reader.result);\r\n        setUser({ profile: reader.result });\r\n      };\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Profile src={user.profile}>\r\n        {/* <Image src={Profile}></Image> */}\r\n        <img\r\n          onClick={uploadImage}\r\n          src={Edit}\r\n          style={{ width: \"51px\", height: \"51px\", cursor: \"pointer\" }}\r\n        ></img>\r\n      </Profile>\r\n\r\n      <div style={{ height: \"50px\" }}></div>\r\n      <Box>{user.user_name}</Box>\r\n      <Box>{user.user_email}</Box>\r\n      <Input\r\n        name=\"new_password\"\r\n        onChange={onInputChange}\r\n        value={user.new_password}\r\n        placeholder=\"새 비밀번호 (영문, 숫자, 특수기호 포함 8~16자)\"\r\n        type=\"text\"\r\n      ></Input>\r\n      <Input\r\n        name=\"check_new_password\"\r\n        onChange={onInputChange}\r\n        value={user.check_new_password}\r\n        placeholder=\"비밀번호 확인\"\r\n        type=\"text\"\r\n      ></Input>\r\n\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <Button\r\n          style={{ backgroundColor: \"#cccccc\" }}\r\n          onClick={() => history.push(\"/mypage\")}\r\n        >\r\n          뒤로가기\r\n        </Button>\r\n        <Button onClick={submit}>수정하기</Button>\r\n      </div>\r\n\r\n      {/* </form> */}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","D:\\SwitMe\\FrontEnd\\src\\components\\ImageUpload.js",["203","204"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst UploadButton = styled.button`\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  color: white;\r\n  background-color: var(--middle);\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst uploadImage = () => {\r\n  var input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.accept = \"image/*\";\r\n\r\n  input.click();\r\n  input.onchange = function (e) {\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(e.target.files[0]);\r\n\r\n    reader.onload = function () {\r\n      console.log(reader.result);\r\n      var answer = reader.result;\r\n    };\r\n  };\r\n};\r\n\r\nconst ImageUpload = ({ name, width, height, radius, ...rest }) => {\r\n  return (\r\n    <UploadButton\r\n      onClick={uploadImage}\r\n      style={{ width: width, height: height, borderRadius: radius }}\r\n      {...rest}\r\n    >\r\n      {name}\r\n    </UploadButton>\r\n  );\r\n};\r\n\r\n// const ImagePreview = ({ width, height, radius, ...rest }) => {\r\n//   return (\r\n//     <>\r\n//       {uploadImage.answer !== null ? (\r\n//         <Image\r\n//           alt=\"profile\"\r\n//           src={require(\"../assets/profile.png\").default}\r\n//           width=\"124\"\r\n//           height=\"124\"\r\n//         />\r\n//       ) : (\r\n//         <Image\r\n//           alt=\"profile\"\r\n//           src={uploadImage.answer}\r\n//           width=\"124\"\r\n//           height=\"124\"\r\n//         />\r\n//       )}\r\n//     </>\r\n//   );\r\n// };\r\n\r\nexport default ImageUpload;\r\n","D:\\SwitMe\\FrontEnd\\src\\components\\Warn.js",["205","206"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../assets/chat.css\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../components/Button\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { getStudydetail, getMember, warnMember } from \"../_actions/actions\";\r\n\r\nconst List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Col = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst RadioButton = styled.input`\r\n  border: 1px solid #56be9c;\r\n  width: 41px;\r\n  height: 41px;\r\n`;\r\n\r\nconst TextBox = styled.textarea`\r\n  /* display: none; */\r\n  margin: 0 auto;\r\n  width: 460px;\r\n  height: 150px;\r\n  outline: none;\r\n  border: 1px solid #c70000;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n`;\r\n\r\nconst Warn = (props) => {\r\n  // console.log(props);\r\n  // console.log(match);\r\n  // const { study_id } = match.params.MemberList;\r\n  // const dispatch = useDispatch();\r\n  // const [study, setStudy] = useState(\"\");\r\n  // const [members, setMembers] = useState([]);\r\n  // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\r\n  const { open, close, header } = props;\r\n\r\n  // const warn = (user_idx) => {\r\n  //   const data = {\r\n  //     study_idx: study_id,\r\n  //     user_idx: user_idx,\r\n  //   };\r\n  //   console.log(data);\r\n  //   dispatch(warnMember(data)).then((response) => {\r\n  //     if (response.payload) {\r\n  //       console.log(\"경고 성공\");\r\n  //     } else {\r\n  //       console.log(\"경고 주기 에러 발생\");\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getMember(study_id)).then((response) => {\r\n  //     if (response.payload) {\r\n  //       console.log(\"스터디 멤버 정보 가져오기 성공\");\r\n  //       console.log(response.payload);\r\n  //       setMembers(response.payload);\r\n  //     } else {\r\n  //       console.log(\"스터디 멤버 정보 가져오기 실패\");\r\n  //     }\r\n  //   });\r\n  // }, []);\r\n\r\n  return (\r\n    // 모달이 열릴때 openModal 클래스가 생성된다.\r\n    <div className={open ? \"openModal modal\" : \"modal\"}>\r\n      {open ? (\r\n        <section>\r\n          <header\r\n            style={{\r\n              height: \"105px\",\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              boxShadow: \"0px 5px 15px grey\",\r\n            }}\r\n          >\r\n            {header}\r\n            <div\r\n              style={{\r\n                color: \"#064538\",\r\n                fontWeight: \"900px\",\r\n                fontSize: \"26px\",\r\n                marginLeft: \"30px\",\r\n                marginTop: \"20px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              스터디원 이름 쓰는 칸\r\n            </div>\r\n            <div style={{ marginLeft: \"30px\", marginBottom: \"20px\" }}>\r\n              해당 스터디원에게 경고하시겠습니까?\r\n            </div>\r\n            <button className=\"close\" onClick={close}>\r\n              {\" \"}\r\n              &times;{\" \"}\r\n            </button>\r\n          </header>\r\n          <main>\r\n            {/* {props.children} */}\r\n            <p style={{ margin: \"10px\", fontSize: \"18px\", fontWeight: \"700\" }}>\r\n              경고사유\r\n            </p>\r\n            <List>\r\n              <Row>\r\n                <RadioButton type=\"radio\" id=\"online\" name=\"noshow\" />\r\n                <label\r\n                  style={{ paddingTop: \"7px\", paddingLeft: \"5px\" }}\r\n                  id=\"noshow\"\r\n                >\r\n                  노쇼\r\n                </label>\r\n              </Row>\r\n              <Row>\r\n                <RadioButton type=\"radio\" id=\"online\" name=\"rate\" />\r\n                <label\r\n                  style={{ paddingTop: \"7px\", paddingLeft: \"5px\" }}\r\n                  id=\"rate\"\r\n                >\r\n                  지각\r\n                </label>\r\n              </Row>\r\n              <Row>\r\n                <RadioButton type=\"radio\" id=\"online\" name=\"rule\" />\r\n                <label\r\n                  style={{ paddingTop: \"7px\", paddingLeft: \"5px\" }}\r\n                  id=\"rule\"\r\n                >\r\n                  스터디 규칙 미준수\r\n                </label>\r\n              </Row>\r\n              <Row style={{ marginBottom: \"15px\" }}>\r\n                <RadioButton type=\"radio\" id=\"online\" name=\"ect\" />\r\n                <label\r\n                  style={{ paddingTop: \"7px\", paddingLeft: \"5px\" }}\r\n                  id=\"ect\"\r\n                >\r\n                  기타 사유\r\n                </label>\r\n              </Row>\r\n            </List>\r\n            <p style={{ margin: \"10px\", fontSize: \"18px\", fontWeight: \"700\" }}>\r\n              상세내용\r\n            </p>\r\n            <List>\r\n              <TextBox />\r\n              <Col\r\n                style={{\r\n                  margin: \"10px\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Button\r\n                  name=\"확인하기\"\r\n                  color=\"#C70000\"\r\n                  width=\"180px\"\r\n                  height=\"70px\"\r\n                  onClick={close}\r\n                  // onClick={() => warn(members.user_idx)}\r\n                />\r\n              </Col>\r\n            </List>\r\n          </main>\r\n\r\n          <footer></footer>\r\n        </section>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Warn;\r\n",{"ruleId":"207","severity":1,"message":"208","line":127,"column":6,"nodeType":"209","endLine":127,"endColumn":18,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":18},{"ruleId":"211","severity":1,"message":"215","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":24},{"ruleId":"207","severity":1,"message":"216","line":147,"column":6,"nodeType":"209","endLine":147,"endColumn":8,"suggestions":"217"},{"ruleId":"211","severity":1,"message":"218","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":13},{"ruleId":"211","severity":1,"message":"219","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":14},{"ruleId":"207","severity":1,"message":"220","line":61,"column":6,"nodeType":"209","endLine":61,"endColumn":8,"suggestions":"221"},{"ruleId":"211","severity":1,"message":"222","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":12},{"ruleId":"211","severity":1,"message":"223","line":1,"column":38,"nodeType":"213","messageId":"214","endLine":1,"endColumn":44},{"ruleId":"211","severity":1,"message":"222","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":12},{"ruleId":"224","severity":1,"message":"225","line":114,"column":40,"nodeType":"226","messageId":"227","endLine":114,"endColumn":42},{"ruleId":"207","severity":1,"message":"228","line":137,"column":6,"nodeType":"209","endLine":137,"endColumn":8,"suggestions":"229"},{"ruleId":"207","severity":1,"message":"228","line":114,"column":6,"nodeType":"209","endLine":114,"endColumn":8,"suggestions":"230"},{"ruleId":"211","severity":1,"message":"231","line":50,"column":11,"nodeType":"213","messageId":"214","endLine":50,"endColumn":15},{"ruleId":"211","severity":1,"message":"232","line":50,"column":17,"nodeType":"213","messageId":"214","endLine":50,"endColumn":22},{"ruleId":"211","severity":1,"message":"233","line":9,"column":10,"nodeType":"213","messageId":"214","endLine":9,"endColumn":20},{"ruleId":"211","severity":1,"message":"223","line":1,"column":38,"nodeType":"213","messageId":"214","endLine":1,"endColumn":44},{"ruleId":"234","severity":1,"message":"235","line":183,"column":9,"nodeType":"236","endLine":183,"endColumn":66},{"ruleId":"237","severity":1,"message":"238","line":193,"column":11,"nodeType":"236","messageId":"239","endLine":201,"endColumn":12},{"ruleId":"211","severity":1,"message":"240","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"211","severity":1,"message":"240","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"241","severity":1,"message":"242","line":85,"column":9,"nodeType":"213","messageId":"243","endLine":85,"endColumn":14},{"ruleId":"241","severity":1,"message":"244","line":86,"column":9,"nodeType":"213","messageId":"243","endLine":86,"endColumn":13},{"ruleId":"241","severity":1,"message":"245","line":87,"column":9,"nodeType":"213","messageId":"243","endLine":87,"endColumn":14},{"ruleId":"241","severity":1,"message":"246","line":88,"column":9,"nodeType":"213","messageId":"243","endLine":88,"endColumn":12},{"ruleId":"241","severity":1,"message":"247","line":89,"column":9,"nodeType":"213","messageId":"243","endLine":89,"endColumn":14},{"ruleId":"241","severity":1,"message":"248","line":90,"column":9,"nodeType":"213","messageId":"243","endLine":90,"endColumn":16},{"ruleId":"241","severity":1,"message":"249","line":91,"column":9,"nodeType":"213","messageId":"243","endLine":91,"endColumn":16},{"ruleId":"224","severity":1,"message":"225","line":69,"column":41,"nodeType":"226","messageId":"227","endLine":69,"endColumn":43},{"ruleId":"207","severity":1,"message":"250","line":100,"column":6,"nodeType":"209","endLine":100,"endColumn":22,"suggestions":"251"},{"ruleId":"207","severity":1,"message":"252","line":112,"column":6,"nodeType":"209","endLine":112,"endColumn":8,"suggestions":"253"},{"ruleId":"211","severity":1,"message":"254","line":116,"column":9,"nodeType":"213","messageId":"214","endLine":116,"endColumn":17},{"ruleId":"207","severity":1,"message":"255","line":145,"column":5,"nodeType":"209","endLine":145,"endColumn":12,"suggestions":"256"},{"ruleId":"207","severity":1,"message":"255","line":160,"column":5,"nodeType":"209","endLine":160,"endColumn":13,"suggestions":"257"},{"ruleId":"211","severity":1,"message":"258","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"235","line":80,"column":15,"nodeType":"236","endLine":80,"endColumn":44},{"ruleId":"207","severity":1,"message":"259","line":57,"column":6,"nodeType":"209","endLine":57,"endColumn":12,"suggestions":"260"},{"ruleId":"234","severity":1,"message":"235","line":74,"column":15,"nodeType":"236","endLine":74,"endColumn":60},{"ruleId":"211","severity":1,"message":"261","line":42,"column":32,"nodeType":"213","messageId":"214","endLine":42,"endColumn":42},{"ruleId":"207","severity":1,"message":"262","line":96,"column":6,"nodeType":"209","endLine":96,"endColumn":8,"suggestions":"263"},{"ruleId":"211","severity":1,"message":"222","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":12},{"ruleId":"207","severity":1,"message":"264","line":138,"column":6,"nodeType":"209","endLine":138,"endColumn":8,"suggestions":"265"},{"ruleId":"211","severity":1,"message":"266","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":13},{"ruleId":"211","severity":1,"message":"267","line":8,"column":23,"nodeType":"213","messageId":"214","endLine":8,"endColumn":31},{"ruleId":"211","severity":1,"message":"268","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":19},{"ruleId":"211","severity":1,"message":"269","line":10,"column":10,"nodeType":"213","messageId":"214","endLine":10,"endColumn":24},{"ruleId":"207","severity":1,"message":"270","line":94,"column":6,"nodeType":"209","endLine":94,"endColumn":8,"suggestions":"271"},{"ruleId":"234","severity":1,"message":"235","line":133,"column":9,"nodeType":"236","endLine":137,"endColumn":10},{"ruleId":"211","severity":1,"message":"258","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"272","line":25,"column":11,"nodeType":"213","messageId":"214","endLine":25,"endColumn":17},{"ruleId":"211","severity":1,"message":"258","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"273","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'study_id', and 'user_id'. Either include them or remove the dependency array.","ArrayExpression",["274"],"no-unused-vars","'ModalTimer' is defined but never used.","Identifier","unusedVar","'TimerListContent' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'studies.length'. Either include them or remove the dependency array.",["275"],"'Input' is defined but never used.","'Search' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'study_id'. Either include them or remove the dependency array.",["276"],"'logo' is defined but never used.","'useRef' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["277"],["278"],"'open' is assigned a value but never used.","'close' is assigned a value but never used.","'useHistory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component Chat_list must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","'Component' is defined but never used.","no-redeclare","'today' is already defined.","redeclared","'year' is already defined.","'month' is already defined.","'day' is already defined.","'hours' is already defined.","'minutes' is already defined.","'seconds' is already defined.","React Hook useEffect has missing dependencies: 'changeTimer' and 'dispatch'. Either include them or remove the dependency array. If 'changeTimer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["279"],"React Hook useCallback has a missing dependency: 'value'. Either include it or remove the dependency array.",["280"],"'onInsert' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'toggle'. Either include them or remove the dependency array. You can also do a functional update 'setToggle(t => ...)' if you only need 'toggle' in the 'setToggle' call.",["281"],["282"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'setinitial', and 'user_id'. Either include them or remove the dependency array.",["283"],"'other_user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'room_idx'. Either include them or remove the dependency array.",["284"],"React Hook useEffect has missing dependencies: 'dispatch', 'study', and 'study_id'. Either include them or remove the dependency array.",["285"],"'axios' is defined but never used.","'editUser' is defined but never used.","'ImageUpload' is defined but never used.","'checkPropTypes' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'user', and 'user_idx'. Either include them or remove the dependency array.",["286"],"'answer' is assigned a value but never used.","'useEffect' is defined but never used.",{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"293","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},"Update the dependencies array to be: [dispatch, joinChange, study_id, user_id]",{"range":"312","text":"313"},"Update the dependencies array to be: [dispatch, studies.length]",{"range":"314","text":"315"},"Update the dependencies array to be: [dispatch, study_id]",{"range":"316","text":"317"},"Update the dependencies array to be: [dispatch]",{"range":"318","text":"319"},{"range":"320","text":"319"},"Update the dependencies array to be: [toggle, change, dispatch, changeTimer]",{"range":"321","text":"322"},"Update the dependencies array to be: [value]",{"range":"323","text":"324"},"Update the dependencies array to be: [dispatch, toggle, value]",{"range":"325","text":"326"},"Update the dependencies array to be: [dispatch, toggle]",{"range":"327","text":"328"},"Update the dependencies array to be: [dispatch, open, setinitial, user_id]",{"range":"329","text":"330"},"Update the dependencies array to be: [dispatch, room_idx]",{"range":"331","text":"332"},"Update the dependencies array to be: [dispatch, study, study_id]",{"range":"333","text":"334"},"Update the dependencies array to be: [dispatch, user, user_idx]",{"range":"335","text":"336"},[3102,3114],"[dispatch, joinChange, study_id, user_id]",[3687,3689],"[dispatch, studies.length]",[1863,1865],"[dispatch, study_id]",[3709,3711],"[dispatch]",[2637,2639],[2747,2763],"[toggle, change, dispatch, changeTimer]",[2999,3001],"[value]",[3731,3738],"[dispatch, toggle, value]",[4051,4059],"[dispatch, toggle]",[1513,1519],"[dispatch, open, setinitial, user_id]",[2756,2758],"[dispatch, room_idx]",[3297,3299],"[dispatch, study, study_id]",[2189,2191],"[dispatch, user, user_idx]"]
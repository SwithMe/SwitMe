{"ast":null,"code":"import axios from \"axios\";\nimport { USER_SERVER } from \"../config\";\nconst LOGIN = \"LOGIN\";\nconst SIGNUP = \"SIGNUP\";\nconst GET_TOTAL_TIME = \"GET_TOTAL_TIME\";\nconst GET_RANK = \"GET_RANK\";\nconst GET_RANK_STUDY = \"GET_RANK_STUDY\";\nconst RECOMMENDED_STUDY = \"RECOMMENDED_STUDY\";\nconst GET_STUDYLIST = \"GET_STUDYLIST\";\nconst GET_STUDYDETAIL = \"GET_STUDYDETAIL\";\nconst JOIN_STUDY = \"JOIN_STUDY\";\nconst LEAVE_STUDY = \"LEAVE_STUDY\";\nconst MAKE_STUDY = \"MAKE_STUDY\";\nconst GET_MESSAGES = \"GET_MESSAGES\";\nconst GET_CHATLIST = \"GET_CHATLIST\";\nconst GET_USER_INFO = \"GET_USER_INFO\";\nconst GET_USER_STUDY = \"GET_USER_STUDY\";\nconst GET_USER_STOPWATCH = \"GET_USER_STOPWATCH\";\nconst EDIT_STUDY = \"EDIT_STUDY\";\nconst GET_MEMBER = \"GET_MEMBER\";\nconst WARN_MEMBER = \"WARN_MEMBER\";\nconst ADD_STOPWATCH = \"ADD_STOPWATCH\";\nconst GET_TIMER_LIST = \"GET_TIMER_LIST\";\nconst EDIT_TIMER = \"EDIT_TIMER\";\nconst DELETE_STOPWATCH = \"DELETE_TIMER\";\nconst SAVE_STOPWATCH = \"SAVE_STOPWATCH\";\nconst USER_MAKE_CHAT = \"USER_MAKE_CHAT\";\nconst EDIT_USER = \"EDIT_USER\"; //로그인, 회원가입 관련\n\nexport const login = dataToSubmit => {\n  let idx = 0;\n  const request = axios.post(`${USER_SERVER}/auth/login`, dataToSubmit).then(response => {\n    console.log(response.headers[\"authorization\"]);\n    idx = response.headers[\"authorization\"];\n    console.log(idx);\n  }).catch(error => {\n    console.log(error);\n  });\n  return {\n    type: LOGIN,\n    payload: idx\n  };\n};\nexport const signup = dataToSubmit => {\n  const request = axios.post(`${USER_SERVER}/auth/signup`, dataToSubmit).then(response => response.data).catch(error => {});\n  return {\n    type: SIGNUP,\n    payload: request\n  };\n}; //메인페이지 관련\n\nexport const getTotalTime = id => {\n  const request = axios.get(`${USER_SERVER}/main/mytime/${id}`).then(response => response.data).catch(error => {});\n  return {\n    type: GET_TOTAL_TIME,\n    payload: request\n  };\n};\nexport const getRanking = () => {\n  const request = axios.get(`${USER_SERVER}/main/rank/individual`).then(response => response.data).catch(error => {});\n  return {\n    type: GET_RANK,\n    payload: request\n  };\n};\nexport const getRankingstudy = () => {\n  const request = axios.get(`${USER_SERVER}/main/rank/study`).then(response => response.data).catch(error => {\n    if (error.response) console.log(error.response);\n  });\n  return {\n    type: GET_RANK_STUDY,\n    payload: request\n  };\n};\nexport const recommendedStudy = () => {\n  const request = axios.get(`${USER_SERVER}/main/recomstudy`).then(response => response.data).catch(error => {});\n  return {\n    type: RECOMMENDED_STUDY,\n    payload: request\n  };\n}; //회원정보 수정\n\nexport const editUser = (user_idx, dataToSubmit) => {\n  const request = axios.post(`${USER_SERVER}/api/mypage/user_update/`, dataToSubmit).then(request => request.data).catch(error => {});\n  return {\n    type: EDIT_USER,\n    payload: request\n  };\n}; //스터디 리스트 불러오기\n\nexport const getStudylist = dataToSubmit => {\n  const request = axios.post(`${USER_SERVER}/list/array`, dataToSubmit).then(response => response.data).catch(error => {});\n  return {\n    type: GET_STUDYLIST,\n    payload: request\n  };\n}; //스터디 세부사항 불러오기\n\nexport const getStudydetail = id => {\n  const request = axios.get(`${USER_SERVER}/list/array/study/${id}`).then(response => response.data).catch(error => {});\n  return {\n    type: GET_STUDYDETAIL,\n    payload: request\n  };\n}; //스터디 가입\n\nexport const joinStudy = (user_id, study_id) => {\n  const request = axios.put(`${USER_SERVER}/list/join/${user_id}/${study_id}`).then(response => response.data).catch(error => {});\n  return {\n    type: JOIN_STUDY,\n    payload: request\n  };\n}; //스터디 탈퇴\n\nexport const leaveStudy = (user_id, study_id) => {\n  const request = axios.delete(`${USER_SERVER}/list/leave/${user_id}/${study_id}`).then(response => response.data).catch(error => {});\n  return {\n    type: LEAVE_STUDY,\n    payload: request\n  };\n}; //스터디 개설\n\nexport const makestudy = dataToSubmit => {\n  const request = axios.post(`${USER_SERVER}/list/array/enroll`, dataToSubmit).then(request => request.data).catch(error => {});\n  return {\n    type: MAKE_STUDY,\n    payload: request\n  };\n}; //메세지 내역 다 가져오기\n\nexport const getMessages = room_idx => {\n  const request = axios.get(`${USER_SERVER}/chat/room/${room_idx}`).then(request => request.data).catch(error => {});\n  return {\n    type: GET_MESSAGES,\n    payload: request\n  };\n}; //채팅 리스트 다 가져오기\n\nexport const getChatlist = user_idx => {\n  const request = axios.get(`${USER_SERVER}/chat/room_list/${user_idx}`).then(request => request.data).catch(error => {});\n  return {\n    type: GET_CHATLIST,\n    payload: request\n  };\n}; //마이페이지\n//사용자 정보 가져오기\n\nexport const getUserInfo = user_idx => {\n  const request = axios.get(`${USER_SERVER}/api/mypage/user/${user_idx}`).then(request => request.data).catch(error => {});\n  return {\n    type: GET_USER_INFO,\n    payload: request\n  };\n}; //사용자가 가입한 스터디 가져오기\n\nexport const getUserStudy = user_idx => {\n  const request = axios.get(`${USER_SERVER}/api/mypage/study_list/${user_idx}`).then(request => request.data).catch(error => {});\n  return {\n    type: GET_USER_STUDY,\n    payload: request\n  };\n}; //사용자 스톱워치 내역 가져오기\n\nexport const getUserStopwatch = user_idx => {\n  const request = axios.get(`${USER_SERVER}/api/mypage/timer_log/${user_idx}`).then(request => request.data).catch(error => {});\n  return {\n    type: GET_USER_STOPWATCH,\n    payload: request\n  };\n}; //스터디 수정\n\nexport const editstudy = (study_id, dataToSubmit) => {\n  const request = axios.post(`${USER_SERVER}/list/array/fix/${study_id}`, dataToSubmit).then(request => request.data).catch(error => {});\n  return {\n    type: EDIT_STUDY,\n    payload: request\n  };\n}; //스터디 멤버리스트 불러오기\n\nexport const getMember = study_id => {\n  const request = axios.get(`${USER_SERVER}/api/study/members/${study_id}`).then(request => request.data).catch(error => {});\n  return {\n    type: GET_MEMBER,\n    payload: request\n  };\n}; //스터디원 경고 주기\n\nexport const warnMember = dataToSubmit => {\n  const request = axios.post(`${USER_SERVER}/api/study/members/warning`, dataToSubmit).then(response => response.payload).catch(error => {\n    console.log(\"error\");\n  });\n  return {\n    type: WARN_MEMBER,\n    payload: request\n  };\n}; //스톱워치 기능\n\nexport const addStopwatch = (user_idx, dataToSubmit) => {\n  const request = axios.post(`${USER_SERVER}/timer/add/${user_idx}`, dataToSubmit).then(response => response.data).catch(error => {});\n  return {\n    type: ADD_STOPWATCH,\n    payload: request\n  };\n};\nexport const getTimerList = user_idx => {\n  const request = axios.get(`${USER_SERVER}/timer/list/${user_idx}`).then(response => response.data).catch(error => {});\n  return {\n    type: GET_TIMER_LIST,\n    payload: request\n  };\n};\nexport const editTimer = (timer_idx, dataToSubmit) => {\n  const request = axios.put(`${USER_SERVER}/timer/edit/${timer_idx}`, dataToSubmit).then(response => response.data).catch(error => {});\n  return {\n    type: EDIT_TIMER,\n    payload: request\n  };\n};\nexport const deleteTimer = timer_idx => {\n  const request = axios.delete(`${USER_SERVER}/timer/delete/${timer_idx}`).then(response => response.data).catch(error => {\n    return null;\n  });\n  return {\n    type: DELETE_STOPWATCH,\n    payload: request\n  };\n};\nexport const saveTimer = dataToSubmit => {\n  const request = axios.post(`${USER_SERVER}/timer/save`, dataToSubmit).then(response => response.data).catch(error => {});\n  return {\n    type: SAVE_STOPWATCH,\n    payload: request\n  };\n}; //스터디원이 채팅 걸 때\n\nexport const userMakeChat = dataToSubmit => {\n  const request = axios.post(`${USER_SERVER}/api/chat/makeroom/user`, dataToSubmit).then(response => response.data).catch(error => {});\n  return {\n    type: USER_MAKE_CHAT,\n    payload: request\n  };\n};\n\nconst actions = (state = {}, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state,\n        isAuth: \"true\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default actions;","map":{"version":3,"sources":["D:/SwitMe/FrontEnd/src/_actions/actions.js"],"names":["axios","USER_SERVER","LOGIN","SIGNUP","GET_TOTAL_TIME","GET_RANK","GET_RANK_STUDY","RECOMMENDED_STUDY","GET_STUDYLIST","GET_STUDYDETAIL","JOIN_STUDY","LEAVE_STUDY","MAKE_STUDY","GET_MESSAGES","GET_CHATLIST","GET_USER_INFO","GET_USER_STUDY","GET_USER_STOPWATCH","EDIT_STUDY","GET_MEMBER","WARN_MEMBER","ADD_STOPWATCH","GET_TIMER_LIST","EDIT_TIMER","DELETE_STOPWATCH","SAVE_STOPWATCH","USER_MAKE_CHAT","EDIT_USER","login","dataToSubmit","idx","request","post","then","response","console","log","headers","catch","error","type","payload","signup","data","getTotalTime","id","get","getRanking","getRankingstudy","recommendedStudy","editUser","user_idx","getStudylist","getStudydetail","joinStudy","user_id","study_id","put","leaveStudy","delete","makestudy","getMessages","room_idx","getChatlist","getUserInfo","getUserStudy","getUserStopwatch","editstudy","getMember","warnMember","addStopwatch","getTimerList","editTimer","timer_idx","deleteTimer","saveTimer","userMakeChat","actions","state","action","isAuth"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { USER_SERVER } from \"../config\";\r\n\r\nconst LOGIN = \"LOGIN\";\r\nconst SIGNUP = \"SIGNUP\";\r\nconst GET_TOTAL_TIME = \"GET_TOTAL_TIME\";\r\nconst GET_RANK = \"GET_RANK\";\r\nconst GET_RANK_STUDY = \"GET_RANK_STUDY\";\r\nconst RECOMMENDED_STUDY = \"RECOMMENDED_STUDY\";\r\nconst GET_STUDYLIST = \"GET_STUDYLIST\";\r\nconst GET_STUDYDETAIL = \"GET_STUDYDETAIL\";\r\nconst JOIN_STUDY = \"JOIN_STUDY\";\r\nconst LEAVE_STUDY = \"LEAVE_STUDY\";\r\nconst MAKE_STUDY = \"MAKE_STUDY\";\r\nconst GET_MESSAGES = \"GET_MESSAGES\";\r\nconst GET_CHATLIST = \"GET_CHATLIST\";\r\nconst GET_USER_INFO = \"GET_USER_INFO\";\r\nconst GET_USER_STUDY = \"GET_USER_STUDY\";\r\nconst GET_USER_STOPWATCH = \"GET_USER_STOPWATCH\";\r\nconst EDIT_STUDY = \"EDIT_STUDY\";\r\nconst GET_MEMBER = \"GET_MEMBER\";\r\nconst WARN_MEMBER = \"WARN_MEMBER\";\r\nconst ADD_STOPWATCH = \"ADD_STOPWATCH\";\r\nconst GET_TIMER_LIST = \"GET_TIMER_LIST\";\r\nconst EDIT_TIMER = \"EDIT_TIMER\";\r\nconst DELETE_STOPWATCH = \"DELETE_TIMER\";\r\nconst SAVE_STOPWATCH = \"SAVE_STOPWATCH\";\r\nconst USER_MAKE_CHAT = \"USER_MAKE_CHAT\";\r\nconst EDIT_USER = \"EDIT_USER\";\r\n\r\n//로그인, 회원가입 관련\r\nexport const login = (dataToSubmit) => {\r\n  let idx = 0;\r\n  const request = axios\r\n    .post(`${USER_SERVER}/auth/login`, dataToSubmit)\r\n    .then((response) => {\r\n      console.log(response.headers[\"authorization\"]);\r\n      idx = response.headers[\"authorization\"];\r\n      console.log(idx);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  return {\r\n    type: LOGIN,\r\n    payload: idx,\r\n  };\r\n};\r\n\r\nexport const signup = (dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/auth/signup`, dataToSubmit)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: SIGNUP,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n//메인페이지 관련\r\nexport const getTotalTime = (id) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/main/mytime/${id}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: GET_TOTAL_TIME, payload: request };\r\n};\r\n\r\nexport const getRanking = () => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/main/rank/individual`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: GET_RANK, payload: request };\r\n};\r\n\r\nexport const getRankingstudy = () => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/main/rank/study`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {\r\n      if (error.response) console.log(error.response);\r\n    });\r\n  return { type: GET_RANK_STUDY, payload: request };\r\n};\r\n\r\nexport const recommendedStudy = () => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/main/recomstudy`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: RECOMMENDED_STUDY, payload: request };\r\n};\r\n\r\n//회원정보 수정\r\nexport const editUser = (user_idx, dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/api/mypage/user_update/`, dataToSubmit)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: EDIT_USER,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n//스터디 리스트 불러오기\r\nexport const getStudylist = (dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/list/array`, dataToSubmit)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: GET_STUDYLIST, payload: request };\r\n};\r\n\r\n//스터디 세부사항 불러오기\r\nexport const getStudydetail = (id) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/list/array/study/${id}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: GET_STUDYDETAIL, payload: request };\r\n};\r\n\r\n//스터디 가입\r\nexport const joinStudy = (user_id, study_id) => {\r\n  const request = axios\r\n    .put(`${USER_SERVER}/list/join/${user_id}/${study_id}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: JOIN_STUDY, payload: request };\r\n};\r\n\r\n//스터디 탈퇴\r\nexport const leaveStudy = (user_id, study_id) => {\r\n  const request = axios\r\n    .delete(`${USER_SERVER}/list/leave/${user_id}/${study_id}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: LEAVE_STUDY, payload: request };\r\n};\r\n\r\n//스터디 개설\r\nexport const makestudy = (dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/list/array/enroll`, dataToSubmit)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: MAKE_STUDY,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n//메세지 내역 다 가져오기\r\nexport const getMessages = (room_idx) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/chat/room/${room_idx}`)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return { type: GET_MESSAGES, payload: request };\r\n};\r\n\r\n//채팅 리스트 다 가져오기\r\nexport const getChatlist = (user_idx) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/chat/room_list/${user_idx}`)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return { type: GET_CHATLIST, payload: request };\r\n};\r\n\r\n//마이페이지\r\n//사용자 정보 가져오기\r\nexport const getUserInfo = (user_idx) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/api/mypage/user/${user_idx}`)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return { type: GET_USER_INFO, payload: request };\r\n};\r\n\r\n//사용자가 가입한 스터디 가져오기\r\nexport const getUserStudy = (user_idx) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/api/mypage/study_list/${user_idx}`)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return { type: GET_USER_STUDY, payload: request };\r\n};\r\n\r\n//사용자 스톱워치 내역 가져오기\r\nexport const getUserStopwatch = (user_idx) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/api/mypage/timer_log/${user_idx}`)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return { type: GET_USER_STOPWATCH, payload: request };\r\n};\r\n\r\n//스터디 수정\r\nexport const editstudy = (study_id, dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/list/array/fix/${study_id}`, dataToSubmit)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: EDIT_STUDY,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n//스터디 멤버리스트 불러오기\r\nexport const getMember = (study_id) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/api/study/members/${study_id}`)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: GET_MEMBER,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n//스터디원 경고 주기\r\nexport const warnMember = (dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/api/study/members/warning`, dataToSubmit)\r\n    .then((response) => response.payload)\r\n    .catch((error) => {\r\n      console.log(\"error\");\r\n    });\r\n  return {\r\n    type: WARN_MEMBER,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n//스톱워치 기능\r\nexport const addStopwatch = (user_idx, dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/timer/add/${user_idx}`, dataToSubmit)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: ADD_STOPWATCH,\r\n    payload: request,\r\n  };\r\n};\r\n\r\nexport const getTimerList = (user_idx) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/timer/list/${user_idx}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: GET_TIMER_LIST,\r\n    payload: request,\r\n  };\r\n};\r\n\r\nexport const editTimer = (timer_idx, dataToSubmit) => {\r\n  const request = axios\r\n    .put(`${USER_SERVER}/timer/edit/${timer_idx}`, dataToSubmit)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: EDIT_TIMER,\r\n    payload: request,\r\n  };\r\n};\r\n\r\nexport const deleteTimer = (timer_idx) => {\r\n  const request = axios\r\n    .delete(`${USER_SERVER}/timer/delete/${timer_idx}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {\r\n      return null;\r\n    });\r\n  return {\r\n    type: DELETE_STOPWATCH,\r\n    payload: request,\r\n  };\r\n};\r\n\r\nexport const saveTimer = (dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/timer/save`, dataToSubmit)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: SAVE_STOPWATCH,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n//스터디원이 채팅 걸 때\r\nexport const userMakeChat = (dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/api/chat/makeroom/user`, dataToSubmit)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: USER_MAKE_CHAT, payload: request };\r\n};\r\n\r\nconst actions = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return { ...state, isAuth: \"true\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default actions;\r\n"]},"metadata":{},"sourceType":"module"}
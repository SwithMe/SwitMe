{"ast":null,"code":"import axios from \"axios\";\nimport { USER_SERVER } from \"../config\";\nconst LOGIN = \"LOGIN\";\nconst SIGNUP = \"SIGNUP\";\nconst GET_TOTAL_TIME = \"GET_TOTAL_TIME\";\nconst GET_RANK = \"GET_RANK\";\nconst GET_RANK_STUDY = \"GET_RANK_STUDY\";\nconst RECOMMENDED_STUDY = \"RECOMMENDED_STUDY\";\nconst GET_STUDYLIST = \"GET_STUDYLIST\";\nconst GET_STUDYDETAIL = \"GET_STUDYDETAIL\";\nconst JOIN_STUDY = \"JOIN_STUDY\";\nconst LEAVE_STUDY = \"LEAVE_STUDY\";\nconst MAKE_STUDY = \"MAKE_STUDY\";\nconst GET_MESSAGES = \"GET_MESSAGES\";\nconst GET_CHATLIST = \"GET_CHATLIST\";\nconst GET_USER_INFO = \"GET_USER_INFO\";\nconst GET_USER_STUDY = \"GET_USER_STUDY\";\nconst GET_USER_STOPWATCH = \"GET_USER_STOPWATCH\";\nconst EDIT_STUDY = \"EDIT_STUDY\";\nconst GET_MEMBER = \"GET_MEMBER\";\nconst WARN_MEMBER = \"WARN_MEMBER\";\nconst ADD_STOPWATCH = \"ADD_STOPWATCH\";\nconst GET_TIMER_LIST = \"GET_TIMER_LIST\"; //로그인, 회원가입 관련\n\nexport const login = dataToSubmit => {\n  const request = axios.post(`${USER_SERVER}/auth/login`, dataToSubmit).then(response => response.headers.get(\"Authorization\")).catch(error => {});\n  return {\n    type: LOGIN,\n    payload: request\n  };\n};\nexport const signup = dataToSubmit => {\n  const request = axios.post(`${USER_SERVER}/auth/signup`, dataToSubmit).then(response => response.data).catch(error => {});\n  return {\n    type: SIGNUP,\n    payload: request\n  };\n}; //메인페이지 관련\n\nexport const getTotalTime = id => {\n  const request = axios.get(`${USER_SERVER}/main/mytime/${id}`).then(response => response.data).catch(error => {});\n  return {\n    type: GET_TOTAL_TIME,\n    payload: request\n  };\n};\nexport const getRanking = () => {\n  const request = axios.get(`${USER_SERVER}/main/rank/individual`).then(response => response.data).catch(error => {});\n  return {\n    type: GET_RANK,\n    payload: request\n  };\n};\nexport const getRankingstudy = () => {\n  const request = axios.get(`${USER_SERVER}/main/rank/study`).then(response => response.data).catch(error => {\n    if (error.response) console.log(error.response);\n  });\n  return {\n    type: GET_RANK_STUDY,\n    payload: request\n  };\n};\nexport const recommendedStudy = () => {\n  const request = axios.get(`${USER_SERVER}/main/recomstudy`).then(response => response.data).catch(error => {});\n  return {\n    type: RECOMMENDED_STUDY,\n    payload: request\n  };\n}; //스터디 리스트 불러오기\n\nexport const getStudylist = dataToSubmit => {\n  const request = axios.post(`${USER_SERVER}/list/array`, dataToSubmit).then(response => response.data).catch(error => {});\n  return {\n    type: GET_STUDYLIST,\n    payload: request\n  };\n}; //스터디 세부사항 불러오기\n\nexport const getStudydetail = id => {\n  const request = axios.get(`${USER_SERVER}/list/array/study/${id}`).then(response => response.data).catch(error => {});\n  return {\n    type: GET_STUDYDETAIL,\n    payload: request\n  };\n}; //스터디 가입\n\nexport const joinStudy = (user_id, study_id) => {\n  const request = axios.put(`${USER_SERVER}/list/join/${user_id}/${study_id}`).then(response => response.data).catch(error => {});\n  return {\n    type: JOIN_STUDY,\n    payload: request\n  };\n}; //스터디 탈퇴\n\nexport const leaveStudy = (user_id, study_id) => {\n  const request = axios.delete(`${USER_SERVER}/list/leave/${user_id}/${study_id}`).then(response => response.data).catch(error => {});\n  return {\n    type: LEAVE_STUDY,\n    payload: request\n  };\n}; //스터디 개설\n\nexport const makestudy = dataToSubmit => {\n  const request = axios.post(`${USER_SERVER}/list/array/enroll`, dataToSubmit).then(request => request.data).catch(error => {});\n  return {\n    type: MAKE_STUDY,\n    payload: request\n  };\n}; //메세지 내역 다 가져오기\n\nexport const getMessages = room_idx => {\n  const request = axios.get(`${USER_SERVER}/chat/room/${room_idx}`).then(request => request.data).catch(error => {});\n  return {\n    type: GET_MESSAGES,\n    payload: request\n  };\n}; //채팅 리스트 다 가져오기\n\nexport const getChatlist = user_idx => {\n  const request = axios.get(`${USER_SERVER}/chat/room_list/${user_idx}`).then(request => request.data).catch(error => {});\n  return {\n    type: GET_CHATLIST,\n    payload: request\n  };\n}; //마이페이지\n//사용자 정보 가져오기\n\nexport const getUserInfo = user_idx => {\n  const request = axios.get(`${USER_SERVER}/api/mypage/user/${user_idx}`).then(request => request.data).catch(error => {});\n  return {\n    type: GET_USER_INFO,\n    payload: request\n  };\n}; //사용자가 가입한 스터디 가져오기\n\nexport const getUserStudy = user_idx => {\n  const request = axios.get(`${USER_SERVER}/api/mypage/study_list/${user_idx}`).then(request => request.data).catch(error => {});\n  return {\n    type: GET_USER_STUDY,\n    payload: request\n  };\n}; //사용자 스톱워치 내역 가져오기\n\nexport const getUserStopwatch = user_idx => {\n  const request = axios.get(`${USER_SERVER}/api/mypage/timer_log/${user_idx}`).then(request => request.data).catch(error => {});\n  return {\n    type: GET_USER_STOPWATCH,\n    payload: request\n  };\n}; //스터디 수정\n\nexport const editstudy = (study_id, dataToSubmit) => {\n  const request = axios.post(`${USER_SERVER}/list/array/fix/${study_id}`, dataToSubmit).then(request => request.data).catch(error => {});\n  return {\n    type: EDIT_STUDY,\n    payload: request\n  };\n}; //스터디 멤버리스트 불러오기\n\nexport const getMember = study_id => {\n  const request = axios.get(`${USER_SERVER}/api/study/members/${study_id}`).then(request => request.data).catch(error => {});\n  return {\n    type: GET_MEMBER,\n    payload: request\n  };\n}; //스터디원 경고 주기\n\nexport const warnMember = dataToSubmit => {\n  const request = axios.post(`${USER_SERVER}/api/study/members/warning`, dataToSubmit).then(response => response.payload).catch(error => {\n    console.log(\"error\");\n  });\n  return {\n    type: WARN_MEMBER,\n    payload: request\n  };\n};\nexport const addStopwatch = (user_idx, dataToSubmit) => {\n  const request = axios.post(`${USER_SERVER}/timer/add/${user_idx}`, dataToSubmit).then(response => response.data).catch(error => {});\n  return {\n    type: ADD_STOPWATCH,\n    payload: request\n  };\n};\n\nconst actions = (state = {}, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state,\n        isAuth: \"true\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default actions;","map":{"version":3,"sources":["D:/SwitMe/FrontEnd/src/_actions/actions.js"],"names":["axios","USER_SERVER","LOGIN","SIGNUP","GET_TOTAL_TIME","GET_RANK","GET_RANK_STUDY","RECOMMENDED_STUDY","GET_STUDYLIST","GET_STUDYDETAIL","JOIN_STUDY","LEAVE_STUDY","MAKE_STUDY","GET_MESSAGES","GET_CHATLIST","GET_USER_INFO","GET_USER_STUDY","GET_USER_STOPWATCH","EDIT_STUDY","GET_MEMBER","WARN_MEMBER","ADD_STOPWATCH","GET_TIMER_LIST","login","dataToSubmit","request","post","then","response","headers","get","catch","error","type","payload","signup","data","getTotalTime","id","getRanking","getRankingstudy","console","log","recommendedStudy","getStudylist","getStudydetail","joinStudy","user_id","study_id","put","leaveStudy","delete","makestudy","getMessages","room_idx","getChatlist","user_idx","getUserInfo","getUserStudy","getUserStopwatch","editstudy","getMember","warnMember","addStopwatch","actions","state","action","isAuth"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { USER_SERVER } from \"../config\";\r\n\r\nconst LOGIN = \"LOGIN\";\r\nconst SIGNUP = \"SIGNUP\";\r\nconst GET_TOTAL_TIME = \"GET_TOTAL_TIME\";\r\nconst GET_RANK = \"GET_RANK\";\r\nconst GET_RANK_STUDY = \"GET_RANK_STUDY\";\r\nconst RECOMMENDED_STUDY = \"RECOMMENDED_STUDY\";\r\nconst GET_STUDYLIST = \"GET_STUDYLIST\";\r\nconst GET_STUDYDETAIL = \"GET_STUDYDETAIL\";\r\nconst JOIN_STUDY = \"JOIN_STUDY\";\r\nconst LEAVE_STUDY = \"LEAVE_STUDY\";\r\nconst MAKE_STUDY = \"MAKE_STUDY\";\r\nconst GET_MESSAGES = \"GET_MESSAGES\";\r\nconst GET_CHATLIST = \"GET_CHATLIST\";\r\nconst GET_USER_INFO = \"GET_USER_INFO\";\r\nconst GET_USER_STUDY = \"GET_USER_STUDY\";\r\nconst GET_USER_STOPWATCH = \"GET_USER_STOPWATCH\";\r\nconst EDIT_STUDY = \"EDIT_STUDY\";\r\nconst GET_MEMBER = \"GET_MEMBER\";\r\nconst WARN_MEMBER = \"WARN_MEMBER\";\r\nconst ADD_STOPWATCH = \"ADD_STOPWATCH\";\r\nconst GET_TIMER_LIST = \"GET_TIMER_LIST\";\r\n\r\n//로그인, 회원가입 관련\r\nexport const login = (dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/auth/login`, dataToSubmit)\r\n    .then((response) => response.headers.get(\"Authorization\"))\r\n    .catch((error) => {});\r\n  return {\r\n    type: LOGIN,\r\n    payload: request,\r\n  };\r\n};\r\n\r\nexport const signup = (dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/auth/signup`, dataToSubmit)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: SIGNUP,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n//메인페이지 관련\r\nexport const getTotalTime = (id) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/main/mytime/${id}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: GET_TOTAL_TIME, payload: request };\r\n};\r\n\r\nexport const getRanking = () => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/main/rank/individual`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: GET_RANK, payload: request };\r\n};\r\n\r\nexport const getRankingstudy = () => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/main/rank/study`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {\r\n      if (error.response) console.log(error.response);\r\n    });\r\n  return { type: GET_RANK_STUDY, payload: request };\r\n};\r\n\r\nexport const recommendedStudy = () => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/main/recomstudy`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: RECOMMENDED_STUDY, payload: request };\r\n};\r\n\r\n//스터디 리스트 불러오기\r\nexport const getStudylist = (dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/list/array`, dataToSubmit)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: GET_STUDYLIST, payload: request };\r\n};\r\n\r\n//스터디 세부사항 불러오기\r\nexport const getStudydetail = (id) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/list/array/study/${id}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: GET_STUDYDETAIL, payload: request };\r\n};\r\n\r\n//스터디 가입\r\nexport const joinStudy = (user_id, study_id) => {\r\n  const request = axios\r\n    .put(`${USER_SERVER}/list/join/${user_id}/${study_id}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: JOIN_STUDY, payload: request };\r\n};\r\n\r\n//스터디 탈퇴\r\nexport const leaveStudy = (user_id, study_id) => {\r\n  const request = axios\r\n    .delete(`${USER_SERVER}/list/leave/${user_id}/${study_id}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return { type: LEAVE_STUDY, payload: request };\r\n};\r\n\r\n//스터디 개설\r\nexport const makestudy = (dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/list/array/enroll`, dataToSubmit)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: MAKE_STUDY,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n//메세지 내역 다 가져오기\r\nexport const getMessages = (room_idx) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/chat/room/${room_idx}`)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return { type: GET_MESSAGES, payload: request };\r\n};\r\n\r\n//채팅 리스트 다 가져오기\r\nexport const getChatlist = (user_idx) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/chat/room_list/${user_idx}`)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return { type: GET_CHATLIST, payload: request };\r\n};\r\n\r\n//마이페이지\r\n//사용자 정보 가져오기\r\nexport const getUserInfo = (user_idx) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/api/mypage/user/${user_idx}`)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return { type: GET_USER_INFO, payload: request };\r\n};\r\n\r\n//사용자가 가입한 스터디 가져오기\r\nexport const getUserStudy = (user_idx) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/api/mypage/study_list/${user_idx}`)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return { type: GET_USER_STUDY, payload: request };\r\n};\r\n\r\n//사용자 스톱워치 내역 가져오기\r\nexport const getUserStopwatch = (user_idx) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/api/mypage/timer_log/${user_idx}`)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return { type: GET_USER_STOPWATCH, payload: request };\r\n};\r\n\r\n//스터디 수정\r\nexport const editstudy = (study_id, dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/list/array/fix/${study_id}`, dataToSubmit)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: EDIT_STUDY,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n//스터디 멤버리스트 불러오기\r\nexport const getMember = (study_id) => {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/api/study/members/${study_id}`)\r\n    .then((request) => request.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: GET_MEMBER,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n//스터디원 경고 주기\r\nexport const warnMember = (dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/api/study/members/warning`, dataToSubmit)\r\n    .then((response) => response.payload)\r\n    .catch((error) => {\r\n      console.log(\"error\");\r\n    });\r\n  return {\r\n    type: WARN_MEMBER,\r\n    payload: request,\r\n  };\r\n};\r\n\r\nexport const addStopwatch = (user_idx, dataToSubmit) => {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/timer/add/${user_idx}`, dataToSubmit)\r\n    .then((response) => response.data)\r\n    .catch((error) => {});\r\n  return {\r\n    type: ADD_STOPWATCH,\r\n    payload: request,\r\n  };\r\n};\r\n\r\nconst actions = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return { ...state, isAuth: \"true\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default actions;\r\n"]},"metadata":{},"sourceType":"module"}
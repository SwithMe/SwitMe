{"ast":null,"code":"var _jsxFileName = \"D:\\\\SwitMe\\\\FrontEnd\\\\src\\\\components\\\\TimerList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport TimerListContent from \"./TimerListContent\";\nimport { addStopwatch, getTimerList, deleteTimer } from \"../_actions/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 510px;\n  height: 780px;\n  border: 1px solid var(--middle);\n  box-sizing: border-box;\n  border-radius: 15px;\n  font-size: 24px;\n\n  .head {\n    font-weight: bold;\n    height: 84px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n    background-color: var(--middle);\n    color: white;\n    justify-content: center;\n  }\n`;\n_c = Wrapper;\nconst Button = styled.button`\n  display: fixed;\n  justify-content: center;\n  align-items: center;\n  width: 164px;\n  height: 40px;\n  border-radius: 20px;\n  background-color: var(--deep);\n  color: white;\n  font-size: 24px;\n  font-size: 20px;\n  outline: none;\n  border: none;\n  margin-top: 50px;\n`;\n_c2 = Button;\nconst AddTimer = styled.input`\n  padding: 31px;\n  font-size: 20px;\n  height: 67px;\n  width: 100%;\n  outline: none;\n  border: none;\n  border-bottom: 1px solid var(--middle);\n`;\n_c3 = AddTimer;\n\nfunction TimerList({\n  openModal,\n  changeTimer,\n  change\n}) {\n  _s();\n\n  //타이머 목록\n  const [status, setStatus] = useState(0);\n  const [toggle, setToggle] = useState(false);\n  const dispatch = useDispatch();\n  const [timers, setTimers] = useState([]);\n  useEffect(() => {\n    dispatch(getTimerList(window.localStorage.getItem(\"id\"))).then(response => {\n      if (response.payload) {\n        var _response$payload;\n\n        const tmp_arr = [];\n        (_response$payload = response.payload) === null || _response$payload === void 0 ? void 0 : _response$payload.map(timer => {\n          const stopwatch = {\n            timer_idx: timer.timer_idx,\n            name: timer.name,\n            duration: 0\n          };\n          const time = timer.duration;\n          const second = time % 60 < 10 ? \"0\" + Math.floor(time % 60) : Math.floor(time % 60);\n          const minute = Math.floor(time / 60) < 10 ? \"0\" + Math.floor(time / 60) : Math.floor(time / 60);\n          const hour = Math.floor(time / 360);\n          stopwatch[\"duration\"] = hour.toString() + \" : \" + minute.toString() + \" : \" + second.toString();\n          tmp_arr.push(stopwatch);\n        });\n        setTimers(tmp_arr);\n        if (tmp_arr.length > 0) changeTimer(tmp_arr[0]);\n      } else {\n        console.log(\"스톱워치 리스트 에러\");\n      }\n    });\n  }, [toggle, change]); //추가하기 status:1\n\n  const Add = () => {\n    setStatus(1);\n  }; //input\n\n\n  const [value, setValue] = useState(\"\");\n  const onInputChange = useCallback(e => {\n    setValue(e.target.value);\n    console.log(value);\n  }, []);\n  const nextId = useRef(2);\n  const onInsert = useCallback(value => {\n    const timer = {\n      id: nextId.current,\n      name: value,\n      time: \"00\"\n    };\n    setTimers(timers.concat(timer));\n    nextId.current += 1;\n  }, [timers]);\n  const onSubmit = useCallback(e => {\n    dispatch(addStopwatch(window.localStorage.getItem(\"id\"), {\n      timer_name: value\n    })).then(response => {\n      if (response.payload) {\n        console.log(response.payload);\n        setToggle(!toggle);\n      } else {\n        console.log(\"스톱워치 추가 에러\");\n      }\n    });\n    setValue(\"\");\n    e.preventDefault();\n    setStatus(0);\n  }, [value]); //삭제\n\n  const onRemove = useCallback(id => {\n    setTimers(timers.filter(timer => timer.id !== id));\n  }, [timers]); //수정\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"head\",\n      children: \"2021.07.18. \\uC77C\\uC694\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: timers === null || timers === void 0 ? void 0 : timers.map(timer => /*#__PURE__*/_jsxDEV(TimerListContent, {\n        timer: timer,\n        onRemove: onRemove,\n        openModal: openModal\n      }, timer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), status === 1 ? /*#__PURE__*/_jsxDEV(AddTimer, {\n      type: \"text\",\n      placeholder: \"\\uD0C0\\uC774\\uBA38\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      value: value,\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [status === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: Add,\n        children: \"+ \\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }, this) : \"\", status === 1 ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onSubmit,\n        children: \"+ \\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TimerList, \"u+j9E9sVp5nW/hp2kcSRHg08td0=\", false, function () {\n  return [useDispatch];\n});\n\n_c4 = TimerList;\nexport default TimerList;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"AddTimer\");\n$RefreshReg$(_c4, \"TimerList\");","map":{"version":3,"sources":["D:/SwitMe/FrontEnd/src/components/TimerList.js"],"names":["React","useState","useCallback","useRef","useEffect","styled","TimerListContent","addStopwatch","getTimerList","deleteTimer","useDispatch","Wrapper","div","Button","button","AddTimer","input","TimerList","openModal","changeTimer","change","status","setStatus","toggle","setToggle","dispatch","timers","setTimers","window","localStorage","getItem","then","response","payload","tmp_arr","map","timer","stopwatch","timer_idx","name","duration","time","second","Math","floor","minute","hour","toString","push","length","console","log","Add","value","setValue","onInputChange","e","target","nextId","onInsert","id","current","concat","onSubmit","timer_name","preventDefault","onRemove","filter","display","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TimerListContent from \"./TimerListContent\";\r\nimport { addStopwatch, getTimerList, deleteTimer } from \"../_actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 510px;\r\n  height: 780px;\r\n  border: 1px solid var(--middle);\r\n  box-sizing: border-box;\r\n  border-radius: 15px;\r\n  font-size: 24px;\r\n\r\n  .head {\r\n    font-weight: bold;\r\n    height: 84px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-top-left-radius: 15px;\r\n    border-top-right-radius: 15px;\r\n    background-color: var(--middle);\r\n    color: white;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: fixed;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 164px;\r\n  height: 40px;\r\n  border-radius: 20px;\r\n  background-color: var(--deep);\r\n  color: white;\r\n  font-size: 24px;\r\n  font-size: 20px;\r\n  outline: none;\r\n  border: none;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst AddTimer = styled.input`\r\n  padding: 31px;\r\n  font-size: 20px;\r\n  height: 67px;\r\n  width: 100%;\r\n  outline: none;\r\n  border: none;\r\n  border-bottom: 1px solid var(--middle);\r\n`;\r\n\r\nfunction TimerList({ openModal, changeTimer, change }) {\r\n  //타이머 목록\r\n  const [status, setStatus] = useState(0);\r\n  const [toggle, setToggle] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [timers, setTimers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTimerList(window.localStorage.getItem(\"id\"))).then(\r\n      (response) => {\r\n        if (response.payload) {\r\n          const tmp_arr = [];\r\n          response.payload?.map((timer) => {\r\n            const stopwatch = {\r\n              timer_idx: timer.timer_idx,\r\n              name: timer.name,\r\n              duration: 0,\r\n            };\r\n            const time = timer.duration;\r\n            const second =\r\n              time % 60 < 10\r\n                ? \"0\" + Math.floor(time % 60)\r\n                : Math.floor(time % 60);\r\n            const minute =\r\n              Math.floor(time / 60) < 10\r\n                ? \"0\" + Math.floor(time / 60)\r\n                : Math.floor(time / 60);\r\n            const hour = Math.floor(time / 360);\r\n            stopwatch[\"duration\"] =\r\n              hour.toString() +\r\n              \" : \" +\r\n              minute.toString() +\r\n              \" : \" +\r\n              second.toString();\r\n            tmp_arr.push(stopwatch);\r\n          });\r\n          setTimers(tmp_arr);\r\n          if (tmp_arr.length > 0) changeTimer(tmp_arr[0]);\r\n        } else {\r\n          console.log(\"스톱워치 리스트 에러\");\r\n        }\r\n      }\r\n    );\r\n  }, [toggle, change]);\r\n\r\n  //추가하기 status:1\r\n  const Add = () => {\r\n    setStatus(1);\r\n  };\r\n\r\n  //input\r\n  const [value, setValue] = useState(\"\");\r\n  const onInputChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n    console.log(value);\r\n  }, []);\r\n\r\n  const nextId = useRef(2);\r\n\r\n  const onInsert = useCallback(\r\n    (value) => {\r\n      const timer = {\r\n        id: nextId.current,\r\n        name: value,\r\n        time: \"00\",\r\n      };\r\n      setTimers(timers.concat(timer));\r\n      nextId.current += 1;\r\n    },\r\n    [timers]\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      dispatch(\r\n        addStopwatch(window.localStorage.getItem(\"id\"), { timer_name: value })\r\n      ).then((response) => {\r\n        if (response.payload) {\r\n          console.log(response.payload);\r\n          setToggle(!toggle);\r\n        } else {\r\n          console.log(\"스톱워치 추가 에러\");\r\n        }\r\n      });\r\n      setValue(\"\");\r\n      e.preventDefault();\r\n      setStatus(0);\r\n    },\r\n    [value]\r\n  );\r\n\r\n  //삭제\r\n  const onRemove = useCallback(\r\n    (id) => {\r\n      setTimers(timers.filter((timer) => timer.id !== id));\r\n    },\r\n    [timers]\r\n  );\r\n\r\n  //수정\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div class=\"head\">2021.07.18. 일요일</div>\r\n\r\n      <div>\r\n        {timers?.map((timer) => (\r\n          <TimerListContent\r\n            timer={timer}\r\n            key={timer.id}\r\n            onRemove={onRemove}\r\n            openModal={openModal}\r\n          ></TimerListContent>\r\n        ))}\r\n      </div>\r\n\r\n      {status === 1 ? (\r\n        <AddTimer\r\n          type=\"text\"\r\n          placeholder=\"타이머명을 입력하세요\"\r\n          value={value}\r\n          onChange={onInputChange}\r\n        ></AddTimer>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {status === 0 ? <Button onClick={Add}>+ 추가하기</Button> : \"\"}\r\n        {status === 1 ? <Button onClick={onSubmit}>+ 추가하기</Button> : \"\"}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default TimerList;\r\n"]},"metadata":{},"sourceType":"module"}